[{"C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\index.js":"1","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\App.js":"2","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\Home.js":"3","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\Header.js":"4","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\reportWebVitals.js":"5","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\Footer.js":"6","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\Algo.js":"7","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\EventCard.js":"8","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\About.js":"9","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\Button.js":"10","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\CompleStory.js":"11","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\LinearSearch.js":"12","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\Card.js":"13","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\ComponentCard.js":"14","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\BinarySearch.js":"15","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\BeadStory.js":"16"},{"size":306,"mtime":1610774502652,"results":"17","hashOfConfig":"18"},{"size":2037,"mtime":1610926602359,"results":"19","hashOfConfig":"18"},{"size":1991,"mtime":1610926985099,"results":"20","hashOfConfig":"18"},{"size":719,"mtime":1610871139774,"results":"21","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"18"},{"size":270,"mtime":1610871139768,"results":"23","hashOfConfig":"18"},{"size":2253,"mtime":1610928257584,"results":"24","hashOfConfig":"18"},{"size":695,"mtime":1610926604131,"results":"25","hashOfConfig":"18"},{"size":475,"mtime":1610926603571,"results":"26","hashOfConfig":"18"},{"size":188,"mtime":1610871139666,"results":"27","hashOfConfig":"18"},{"size":6375,"mtime":1610900495089,"results":"28","hashOfConfig":"18"},{"size":16890,"mtime":1610926604243,"results":"29","hashOfConfig":"18"},{"size":478,"mtime":1610878491593,"results":"30","hashOfConfig":"18"},{"size":1380,"mtime":1610926603984,"results":"31","hashOfConfig":"18"},{"size":17979,"mtime":1610926603836,"results":"32","hashOfConfig":"18"},{"size":8506,"mtime":1610927535954,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1lefsj1",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},"C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\index.js",[],["74","75"],"C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\App.js",["76"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Header from \"./Components/Header\";\r\nimport CompleStory from \"./Components/CompleStory\";\r\nimport \"./App.css\";\r\nimport ComponentCard from \"./Components/ComponentCard\";\r\nimport Home from \"./Components/Home\";\r\nimport \"./App.css\";\r\nimport Footer from \"./Components/Footer\";\r\nimport Algo from \"./Components/Algo\";\r\nimport LinearSearch from \"./Components/LinearSearch\";\r\nimport BinarySearch from \"./Components/BinarySearch\";\r\n\r\nimport About from \"./Components/About\";\r\nimport puzzle from \"./Assets/Puzzle.png\";\r\nimport cube from \"./Assets/cube.png\";\r\nimport BeadStory from \"./Components/BeadStory\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/building\">\r\n            <BinarySearch />\r\n          </Route>\r\n          <Route path=\"/LinearSearch\">\r\n            <Header />\r\n            <CompleStory />\r\n          </Route>\r\n          <Route path=\"/BinarySearch\">\r\n            <Header />\r\n            <BeadStory />\r\n          </Route>\r\n          <Route path=\"/Algorithm\">\r\n            <Header />\r\n            <Algo />\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Header />\r\n            <Home />\r\n            <ComponentCard\r\n              headline=\"Algorithm\"\r\n              para=\"Aspiring to excel in Competitive Coding? Then You should be aware what all STL offers...\r\n              STL has oceans of algorithms, here is your opportunity.... \"\r\n              buttonContent=\"Learn from Here »\"\r\n              sideimage={puzzle}\r\n            />\r\n            <ComponentCard\r\n              headline=\"Puzzle\"\r\n              para=\"Practice makes a man perfect! what if add with practice...\"\r\n              buttonContent=\"Go Here »\"\r\n              sideimage={cube}\r\n            />\r\n            <About />\r\n            <Footer />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\Home.js",[],"C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\Header.js",["77","78"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { purple } from '@material-ui/core/colors';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiAppBar-colorPrimary\" :{\r\n        backgroundColor: \"#312c51 \"         \r\n    },\r\n    flexGrow: 1,\r\n  },\r\n//   menuButton: {\r\n//     marginRight: theme.spacing(2),\r\n//   },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  \r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            ILLITRATE\r\n          </Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\reportWebVitals.js",[],"C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\Footer.js",[],"C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\Algo.js",[],"C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\EventCard.js",[],"C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\About.js",[],"C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\Button.js",[],"C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\CompleStory.js",["79"],"import React from 'react'\r\nimport \"./CompleStory.css\";\r\nimport Lottie from 'react-lottie';\r\nimport cop from \"../Lottie/policecar.json\";\r\nimport police from \"../Lottie/policeman.json\";\r\nimport bagmoney from \"../Lottie/bagmoney.json\";\r\nimport badge from \"../Lottie/badge.json\";\r\n// import linearCode from \"../Assets/\"\r\nimport thief from \"../Assets/chasingthief.png\";\r\nimport LinearSearch from './LinearSearch';\r\n\r\n\r\nfunction CompleStory() {\r\n  return (\r\n    <div className=\"linear__Search\">\r\n    <div className=\"linear__header\">\r\n       <h1>\r\n         <span className=\"black\"> Scratch the</span>\r\n         <span className=\"saffron\">Lie <span className=\"black1\">find the</span></span>\r\n         <div className=\"cop\">\r\n           <Lottie options={{ animationData:badge,}} />\r\n         </div>\r\n         <span className=\"orange\">Thief</span>\r\n       </h1>\r\n    </div>\r\n    <div className=\"linear__story\">\r\n         <div className=\"lineary_storyone\">\r\n         <div className=\"linear__start\">\r\n            <span className=\"welcome\"> Hello chief,</span>\r\n            <p> welcome to this enthralling <span className=\"journey\">Journey</span> filled with action, <span className=\"adven\">Adventure</span> and excitement.\r\n               You have been appointed as the new police station chief of an <span className=\"town\">Infamous Town </span> since it is filled with thieves committing \r\n               crimes now and then. All you have to do is show no mercy to these ville thieves who are <span className=\"terror\">Terrorizing</span> the town.</p>\r\n         </div>\r\n         <div className=\"linear__police\">\r\n           <Lottie options={{ animationData:police,}} />\r\n         </div>\r\n         </div>\r\n         \r\n            \r\n         <div className=\"linear_storytwo\">\r\n           <div className=\"linear__runthief\">\r\n           <img className=\"thiefRun\" src={thief} alt=\"\" />\r\n         \r\n         </div>\r\n           <div className=\"linear__mid\">\r\n              <p>You are welcomed the very \r\n                <span className=\"day\"> first day</span>\r\n                 at office with some serious task on shoulders.\r\n                  A <span className=\"robbery\"> Robbery</span> has been reported nearby and you rush \r\n                  to the site immediately.\r\n                  On reaching the crime scene you are informed that\r\n                   the thief has already\r\n                 eloped and taken away with him significant amount of <span className=\"cash\"> cash.</span>\r\n                  After carefully scrutinising the scene and collecting the cues,\r\n                   you go on to trace the thief and catch him down.\r\n                    On contacting the station for <span className=\"support\"> backup support,</span> \r\n                    you are led down as only you are available at the instant.\r\n</p>\r\n           </div>\r\n         </div>\r\n         <div className=\"linear_storythree\">\r\n           <div  className=\"linear__run\">\r\n             <p> <span className=\"track\"> Tracking</span> him, you reach the train station \r\n             and see him getting onto the train and <span className=\"rush\"> rush</span> to reach the \r\n             train in time. The real <span className=\"challenge\"> Challenge</span> to get hold of him begins here...</p>\r\n           </div>\r\n           <div className=\"linear__car\">\r\n           <Lottie options={{ animationData:cop,}} />\r\n          {/* // <Lottie options={{ animationData: \"https://assets4.lottiefiles.com/packages/lf20_fzxgbei2.json\",}} /> */}\r\n         </div>\r\n         </div>\r\n         \r\n    </div>\r\n    <div className=\"linear__search\">\r\n      <h1 className=\"headCatch\" >Let's Catch The Thief</h1>\r\n      <div className=\"problemStatement\">\r\n        <h1>Problem:</h1>\r\n        <p>the train has 10 compartments, and there is a condition that in each compartment, there is only one passenger. The thief hid in Tran's compartment. You i.e. chief knew the weight of every passenger and thief. \r\nFind out the compartment’s number in which the thief is found.</p>\r\n      </div>\r\n      <LinearSearch />\r\n    </div>\r\n    <div className=\"linear__blog\">\r\n      <h2>Linear Search</h2>\r\n      <p>A Linear Search is the most basic type of searching algorithm. \r\n      A Linear Search sequentially moves through your collection (or data\r\n       structure) looking for a matching value. In other words, it looks down a list, \r\n       one item at a time, without jumping.</p>\r\n       <video className=\"home__logo\" autoPlay={true} loop={true} muted={true} playsInline={true}>\r\n          <source src=\"https://github.com/rohitsigar/ILLITRATE/blob/master/linearvids.mp4?raw=true\" type=\"video/webm\" />\r\n        </video>\r\n       <h4> Approach </h4>\r\n       <ul>\r\n         <li>\r\n           <p className=\"linear_step\">Sequentially move through the array from the leftmost side and start comparing the value\r\n            you want to search (let x) with each element of array.</p>\r\n         </li>\r\n         <li>\r\n           <p className=\"linear_step\">\r\n           If x matches with an element then return the index.\r\n           </p>\r\n         </li>\r\n         <li>\r\n           <p className=\"linear_step\">\r\n           If x does not match with any of the elements then return -1.\r\n           </p>\r\n         </li>\r\n       </ul>\r\n       <img className=\"linear__code\" src=\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/linearCode%20Snippet.PNG?raw=true\"alt=\"/\"></img>\r\n       <p classname=\"linear_ques\">\r\n       If there is a n sized array & you have to find element-x from the array, \r\n       then what is the average number of indexes you have to traverse? \r\n       <span className=\"linear_think\">Think about it?</span>\r\n       </p>\r\n       <h4> Time Complexity </h4>\r\n       <p classname=\"linear_timeCom\">\r\n       The time required to search an element using a linear search algorithm depends on the size of the list. Within the best-case situation, the component is present at the starting of\r\n        the list and within the worst-case, it is display at the end. <br></br><br></br>We can conclude that \"Time Complexity\" for linear Search is\r\n        <br></br><h3>Best: O(1) </h3><h3> Average: O(n) </h3><h3> Worst: O(n)</h3>\r\n       </p>\r\n       <h6 className=\"linear__con\">Overall Linear Search is an important concept to understand when it comes to algorithms.</h6>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n \r\n\r\nexport default CompleStory;\r\n","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\LinearSearch.js",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109"],"import React, { useRef, useState } from \"react\";\r\nimport \"./LinearSearch.css\";\r\nimport Card from \"./Card\";\r\nvar Weight = new Array(1,2,3,4,5,6,7,8,9,10,11);\r\nvar Message3 = \"Weight\";\r\nvar Message1 = \"Ready to Scratch a Lie! 😜\";\r\nvar Message2 = \"Traverse the array\";\r\nvar PoliceMan = 1;\r\nvar Thief ; \r\nvar b = true;\r\nfunction trial(){\r\n  for(var i=1; i<Weight.length;i++)\r\n  {\r\n    Weight[i] = Math.floor(Math.random()*100)\r\n    while(Weight==0){\r\n      Weight[i] = Math.floor(Math.random()*100)\r\n    }\r\n  }\r\n  Weight.sort(function(a, b){return a - b});\r\n  for(var i=1;i<11;i++)\r\n  {\r\n    console.log(Weight[i]);\r\n  }\r\n   Thief = Math.floor(Math.random()*10)\r\n   while(Thief==0){\r\n    Thief= Math.floor(Math.random()*10)\r\n  }\r\n  var ThiefWeight = Weight[Thief];\r\n}\r\nfunction LinearSearch() {\r\n\r\n  const commentSection = useRef(null);\r\n  const findId = () => window.scrollTo({\r\n    top: commentSection.current.offSetTop,\r\n    behavior:\"smooth\"\r\n  });\r\n\r\nconst [values,setValues] = useState(0);\r\n// console.log(values);\r\nconst [photo1,setPhoto1] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1.png?raw=true\");\r\nconst [photo2,setPhoto2] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train2.png?raw=true\");\r\nconst [photo3,setPhoto3] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1.png?raw=true\");\r\nconst [photo4,setPhoto4] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train4.png?raw=true\");\r\nconst [photo5,setPhoto5] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1.png?raw=true\");\r\nconst [photo6,setPhoto6] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train2.png?raw=true\");\r\nconst [photo7,setPhoto7] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1.png?raw=true\");\r\nconst [photo8,setPhoto8] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train4.png?raw=true\");\r\nconst [photo9,setPhoto9] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1.png?raw=true\");\r\nconst [photo10,setPhoto10] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train2.png?raw=true\");\r\nconst [photo11,setPhoto11] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/engine1.png?raw=true\");\r\n\r\n\r\nif(b)\r\n{\r\n  trial();\r\n  b = false;\r\n}\r\nconsole.log(Thief);\r\nconsole.log(PoliceMan);\r\n\r\n//Thief=10;\r\n\r\nconst findId1 =  ()=>{\r\n  if(PoliceMan==1)\r\n  {\r\n    if(Weight[Thief]==Weight[1])\r\n    {\r\n      Thief1();\r\n      Message1 = \"Congratulations! You caught the thief 🤩!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"st index of the Compartment\";\r\n\r\n     }\r\n    else\r\n    {\r\n      findTrain10();\r\n       Message1 = \"Oops!!🙊 try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      Message3 = \"Passenger Weight : \" + Weight[1] + \"kg\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n} \r\nconst findId2 =  ()=>{\r\n  if(PoliceMan==2)\r\n  {\r\n    if(Weight[Thief]==Weight[2])\r\n    {\r\n      Thief2();\r\n      findTrain11();\r\n      Message1 = \"Congratulations! You caught the thief 🤩!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"nd index of the Compartment\";\r\n    }\r\n    else\r\n    {\r\n      findTrain11();\r\n      findTrain20();\r\n       Message1 = \"Oops!!🙊 try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      Message3 = \"Passenger Weight : \" + Weight[2] + \"kg\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n  else{\r\n    console.log(\"2 box\");\r\n    imp();\r\n    Message1 = \"PoliceMan is not reached to this Compartment Yet!\";\r\n    Message2 = \"You found the required number on \" + PoliceMan + \"rd index of the Compartment\";\r\n  }\r\n} \r\nconst findId3 =  ()=>{\r\nif(PoliceMan==3)\r\n  {\r\n    if(Weight[Thief]==Weight[3])\r\n    {\r\n      Thief3();\r\n      findTrain21();\r\n      Message1 = \"Congratulations! You caught the thief 🤩!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"rd index of the Compartment\";\r\n    }\r\n    else\r\n    {\r\n      findTrain21();\r\n      findTrain30();\r\n       Message1 = \"Oops!!🙊 try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      Message3 = \"Passenger Weight : \" + Weight[3] + \"kg\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 = \"PoliceMan is not reached to this Compartment Yet!\";\r\n    Message2 = \"In Linear Search : Traversing is done Sequentially\";\r\n    console.log(\"3 box\");\r\n  }\r\n} \r\nconst findId4 =  ()=>{\r\nif(PoliceMan==4)\r\n  {\r\n    if(Weight[Thief]==Weight[4])\r\n    {\r\n      Thief4();\r\n      findTrain31();\r\n      Message1 = \"Congratulations! You caught the thief 🤩!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"th index of the Compartment\";\r\n    }\r\n    else\r\n    {\r\n      findTrain31();\r\n      findTrain40();\r\n       Message1 = \"Oops!!🙊 try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      Message3 = \"Passenger Weight : \" + Weight[4] + \"kg\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 = \"PoliceMan is not reached to this Compartment Yet!\";\r\n    Message2 = \"In Linear Search : Traversing is done Sequentially\";\r\n    console.log(\"4 box\");\r\n  }\r\n} \r\nconst findId5 =  ()=>{\r\nif(PoliceMan==5)\r\n  {\r\n    if(Weight[Thief]==Weight[5])\r\n    {\r\n      findTrain41();\r\n      Thief5();\r\n      Message1 = \"Congratulations! You caught the thief 🤩!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"th index of the Compartment\";\r\n    }\r\n    else\r\n    {\r\n      findTrain41();\r\n      findTrain50();\r\n       Message1 = \"Oops!!🙊 try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      Message3 = \"Passenger Weight : \" + Weight[5] + \"kg\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 = \"PoliceMan is not reached to this Compartment Yet!\";\r\n    Message2 = \"In Linear Search : Traversing is done Sequentially\";\r\n    console.log(\"5 box\");\r\n  }\r\n} \r\nconst findId6 =  ()=>{\r\nif(PoliceMan==6)\r\n  {\r\n    if(Weight[Thief]==Weight[6])\r\n    {\r\n      Thief6();\r\n      findTrain51();\r\n      Message1 = \"Congratulations! You caught the thief 🤩!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"th index of the Compartment\";\r\n    }\r\n    else\r\n    {\r\n      findTrain51();\r\n      findTrain60();\r\n       Message1 = \"Oops!!🙊 try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      Message3 = \"Passenger Weight : \" + Weight[6] + \"kg\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 = \"PoliceMan is not reached to this Compartment Yet!\";\r\n    Message2 = \"In Linear Search : Traversing is done Sequentially\";\r\n    console.log(\"6 box\");\r\n  }\r\n} \r\nconst findId7 =  ()=>{\r\nif(PoliceMan==7)\r\n  {\r\n    if(Weight[Thief]==Weight[7])\r\n    {\r\n      Thief7();\r\n      findTrain61();\r\n      Message1 = \"Congratulations! You caught the thief 🤩!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"th index of the Compartment\";\r\n    }\r\n    else\r\n    {\r\n      findTrain61();\r\n      findTrain70();\r\n       Message1 = \"Oops!!🙊 try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      Message3 = \"Passenger Weight : \" + Weight[7] + \"kg\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 = \"PoliceMan is not reached to this Compartment Yet!\";\r\n    Message2 = \"In Linear Search : Traversing is done Sequentially\";\r\n    console.log(\"7 box\");\r\n  }\r\n} \r\n\r\nconst findId8 =  ()=>{\r\n\r\n\r\n    if(PoliceMan==8)\r\n\r\n  {\r\n    if(Weight[Thief]==Weight[8])\r\n\r\n    {\r\n      Thief8();\r\n      findTrain71();\r\n      Message1 = \"Congratulations! You caught the thief 🤩!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"th index of the Compartment\";\r\n    }\r\n    else\r\n    {\r\n      findTrain71();\r\n      findTrain80();\r\n       Message1 = \"Oops!!🙊 try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      Message3 = \"Passenger Weight : \" + Weight[8] + \"kg\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 = \"PoliceMan is not reached to this Compartment Yet!\";\r\n    Message2 = \"In Linear Search : Traversing is done Sequentially\";\r\n    console.log(\"8 box\");\r\n  }\r\n}\r\nconst findId9 =  ()=>{\r\n  if(PoliceMan==9)\r\n  {\r\n    if(Weight[Thief]==Weight[9])\r\n    {\r\n      findTrain81();\r\n      Thief9();\r\n      Message1 = \"Congratulations! You caught the thief 🤩!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"th index of the Compartment\";\r\n    }\r\n    else\r\n    {\r\n      findTrain81();\r\n      findTrain90();\r\n       Message1 = \"Oops!!🙊 try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      Message3 = \"Passenger Weight : \" + Weight[9] + \"kg\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 = \"PoliceMan is not reached to this Compartment Yet!\";\r\n    Message2 = \"In Linear Search : Traversing is done Sequentially\";\r\n    console.log(\"9 box\");\r\n  }\r\n} \r\nconst findId10 =  ()=>{\r\nif(PoliceMan==10)\r\n  {\r\n    if(Weight[Thief]==Weight[10])\r\n    {\r\n      findTrain91();\r\n      Thief10();\r\n      Message1 = \"Congratulations! You caught the thief 🤩!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"th index of the Compartment\";\r\n      Message3 = \"Passenger Weight : \" + Weight[10] + \"kg\";\r\n    }\r\n    else\r\n    {\r\n      findTrain91();\r\n      findTrain100();\r\n       Message1 = \"Oops!!🙊 try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 = \"PoliceMan is not reached to this Compartment Yet!\";\r\n    Message2 = \"In Linear Search : Traversing is done Sequentially\";\r\n    console.log(\"10 box\");\r\n  }\r\n} \r\nconst findTrain10 = ()=>\r\n{\r\n  setPhoto1(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/1%20pasanger.png?raw=true\");\r\n}\r\nconst findTrain11 = ()=>\r\n{\r\n  setPhoto1(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1Opacity%20(1).png?raw=true\");\r\n}\r\nconst findTrain20 = ()=>\r\n{\r\n  setPhoto2(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/2nd%20pasanger.png?raw=true\");\r\n}\r\nconst findTrain21 = ()=>\r\n{\r\n  setPhoto2(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train2Opacity.png?raw=true\");\r\n}\r\nconst findTrain30 = ()=>\r\n{\r\n  setPhoto3(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/3.png?raw=true\");\r\n}\r\nconst findTrain31 = ()=>\r\n{\r\n  setPhoto3(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1Opacity%20(1).png?raw=true\");\r\n}\r\nconst findTrain40 = ()=>\r\n{\r\n  setPhoto4(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/4th%20pasanger.png?raw=true\");\r\n}\r\nconst findTrain41 = ()=>\r\n{\r\n  setPhoto4(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train4Opacity.png?raw=true\");\r\n}\r\nconst findTrain50 = ()=>\r\n{\r\n  setPhoto5(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/5th%20passenger.png?raw=true\");\r\n}\r\nconst findTrain51 = ()=>\r\n{\r\n  setPhoto5(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1Opacity%20(1).png?raw=true\");\r\n}\r\nconst findTrain60 = ()=>\r\n{\r\n  setPhoto6(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/6.png?raw=true\");\r\n}\r\nconst findTrain61 = ()=>\r\n{\r\n  setPhoto6(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train2Opacity.png?raw=true\");\r\n}\r\nconst findTrain70 = ()=>\r\n{\r\n  setPhoto7(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/7th%20passenger.png?raw=true\");\r\n}\r\nconst findTrain71 = ()=>\r\n{\r\n  setPhoto7(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1Opacity%20(1).png?raw=true\");\r\n}\r\nconst findTrain80 = ()=>\r\n{\r\n  setPhoto8(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/8th%20passenger.png?raw=true\");\r\n}\r\nconst findTrain81 = ()=>\r\n{\r\n  setPhoto8(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train4Opacity.png?raw=true\");\r\n}\r\nconst findTrain90 = ()=>\r\n{\r\n  setPhoto9(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/motu.png?raw=true\");\r\n}\r\nconst findTrain91 = ()=>\r\n{\r\n  setPhoto9(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1Opacity%20(1).png?raw=true\");\r\n}\r\nconst findTrain100 = ()=>\r\n{\r\n  setPhoto10(\"https://scontent.fdel6-1.fna.fbcdn.net/v/t1.0-9/139941229_102333658518873_3041693399418250157_o.jpg?_nc_cat=108&ccb=2&_nc_sid=730e14&_nc_ohc=9QrThqK6StcAX9JYt55&_nc_ht=scontent.fdel6-1.fna&oh=9d3f923a2eb2e0fb3033237a0ac7e24b&oe=6028DE6A\");\r\n}\r\nconst findTrain101 = ()=>\r\n{\r\n  setPhoto10(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train2Opacity.png?raw=true\");\r\n}\r\nconst Thief1 = ()=>\r\n{\r\n  setPhoto1(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst Thief2 = ()=>\r\n{\r\n  setPhoto2(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst Thief3 = ()=>\r\n{\r\n  setPhoto3(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst Thief4 = ()=>\r\n{\r\n  setPhoto4(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst Thief5 = ()=>\r\n{\r\n  setPhoto5(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst Thief6 = ()=>\r\n{\r\n  setPhoto6(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst Thief7 = ()=>\r\n{\r\n  setPhoto7(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst Thief8 = ()=>\r\n{\r\n  setPhoto8(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst Thief9 = ()=>\r\n{\r\n  setPhoto9(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst Thief10 = ()=>\r\n{\r\n  setPhoto10(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst imp = ()=>\r\n{\r\n  if(photo11==\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/engine1.png?raw=true\")\r\n  {\r\n    setPhoto11(\"https://bit.ly/3ijtQxj\")\r\n  }\r\n  else\r\n  {\r\n    setPhoto11(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/engine1.png?raw=true\")\r\n  }\r\n}\r\n  return <div className=\"linearSearch\">\r\n  <div className=\"CardCSS\">\r\n  <Card \r\n    message={`Result = ${Message1}`}\r\n  />\r\n  <Card \r\n    message={`Code Logic = ${Message2}`}\r\n  />\r\n  <Card \r\n    message={Message3}\r\n  />\r\n  \r\n\r\n\r\n  </div>\r\n  <img className =\"Engine\" src = {photo11} alt = \"/\"></img>\r\n    <button id=\"1\" onClick ={findId1}  className=\" drum\" >\r\n    <img id=\"img\"  src = {photo1}  className=\"image\"  alt=\"/\">\r\n    </img>\r\n    </button>\r\n   \r\n    <button  id=\"2\"  onClick ={findId2}  className=\" drum\"> <img  src={photo2}  className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"3\" onClick ={findId3}  className=\" drum\"> <img src={photo3} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"4\" onClick ={findId4}  className=\" drum\"> <img src={photo4} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"5\" onClick ={findId5} className=\" drum\"> <img src={photo5} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"6\" onClick ={findId6} className=\" drum\"> <img src={photo6} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"7\" onClick ={findId7} className=\" drum\"> <img src={photo7} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"8\" onClick ={findId8} className=\" drum\"> <img src={photo8} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"9\" onClick ={findId9} className=\" drum\"> <img src={photo9} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"10\" onClick ={findId10} className=\" drum\">\r\n      <img src={photo10} className=\"image\" alt=\"/\"></img>\r\n    </button>\r\n <div>\r\n   <h1 className=\"scrollDown\" ref={commentSection}>Click On the Compartment To Catch The Thief</h1>\r\n </div>\r\n  \r\n\r\n  </div>;\r\n\r\n}\r\n\r\nexport default LinearSearch;","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\Card.js",[],"C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\ComponentCard.js",["110"],"import React from 'react'\r\nimport \"./cardComponent.css\"\r\n\r\nimport Tilt from \"react-tilt\"\r\n\r\nfunction componentCard(props) {\r\n    return (\r\n      <div className=\"ComponentCard\">\r\n        <Tilt\r\n      className=\"col-md-9 card__content Tilt\"\r\n      options={{ max: 5, scale: 1 }}\r\n    >\r\n      <div\r\n        className=\"card__content__inner Tilt-inner\"\r\n        style={{ backgroundColor: props.color, scale: 1 }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6 col-md-9 col-xs-12\r\n           align-items-start\">\r\n            <div className=\"hackathon__title\">{props.headline}</div>\r\n            <div className=\"hackathon__duration\"> {props.para}</div>\r\n\r\n            <a\r\n              href=\"https://hackathon.dscwow.tech/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n            >\r\n              <button class=\"buttonfx slideleft\">{props.buttonContent}</button>\r\n            </a>\r\n          </div>\r\n          <img\r\n\r\n          // src=\"https://dscwow.tech/images/card/graphics.png\"\r\n            // src=\"https://banner2.cleanpng.com/20180426/xue/kisspng-algorithms-data-structures-=-programs-data-struc-5ae173e12e69b4.6797280015247247051901.jpg\"\r\n            src={props.sideimage}\r\n\r\n            className=\"card__graphics lazy\"\r\n            alt=\"CodeOffDuty Hackathon DSC WOW\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </Tilt>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default componentCard;\r\n","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\BinarySearch.js",["111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144"],"import React, { useRef, useState } from \"react\";\r\nimport \"./BinarySearch.css\";\r\nimport Card from \"./Card\";\r\nvar Weight = new Array(1,2,3,4,5,6,7,8,9,10,11);\r\nvar Message3 = \"No. of Beads\";\r\nvar Message1 = \"Ready to Scratch a Lie! 😜\";\r\nvar Message2 = \"Traverse the array\";\r\nvar Message4 = \"\";\r\nvar Thief ;\r\nvar left = 1;\r\nvar right = 10;\r\nvar b = true;\r\nvar PoliceMan = 1;\r\nfunction trial(){\r\n  for(var i=1; i<Weight.length;i++)\r\n  {\r\n    Weight[i] = Math.floor(Math.random()*100)\r\n    while(Weight==0){\r\n      Weight[i] = Math.floor(Math.random()*100)\r\n    }\r\n  }\r\n  Weight.sort(function(a, b){return a - b});\r\n  for(var i=1;i<11;i++)\r\n  {\r\n    console.log(Weight[i]);\r\n  }\r\n   Thief = Math.floor(Math.random()*10)\r\n   while(Thief==0){\r\n    Thief= Math.floor(Math.random()*10)\r\n  }\r\n  var ThiefWeight = Weight[Thief];\r\n}\r\nfunction BinarySearch() {\r\nconst [values,setValues] = useState(0);\r\n\r\nconst [photo1,setPhoto1] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo2,setPhoto2] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo3,setPhoto3] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo4,setPhoto4] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo5,setPhoto5] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo6,setPhoto6] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo7,setPhoto7] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo8,setPhoto8] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo9,setPhoto9] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo10,setPhoto10] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo11,setPhoto11] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\n\r\nPoliceMan = Math.floor(left + (right - left)/2);\r\n\r\nif(b)\r\n{\r\n  trial();\r\n  b = false;\r\n  Message4 = \"No. of beads in Precious jwellery: \" + Weight[Thief]; \r\n}\r\nconsole.log(Thief);\r\nconsole.log(PoliceMan);\r\nconst findId1 =  ()=>{\r\n  if(PoliceMan==1)\r\n  {\r\n    if(Weight[Thief]==Weight[1])\r\n    {\r\n      Thief1();\r\n      findTrain21();\r\n      Message1 = \"Congratulations! You save the robary 🤩!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"st index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n\r\n     }\r\n    else\r\n    {\r\n      findTrain10();\r\n      findTrain21();\r\n       Message1 = \"Oops!!🙊 this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 = \"No. of Beads in currentBox: \" + Weight[1] ;\r\n      if(Weight[Thief]>Weight[1])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n    }\r\n  }\r\n  else\r\n  {\r\n    imp();\r\n    Message1 = \"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"3 box\");\r\n  }\r\n} \r\nconst findId2 =  ()=>{\r\n  if(PoliceMan==2)\r\n  {\r\n    if(Weight[Thief]==Weight[2])\r\n    {\r\n      Thief2();\r\n      findTrain51();\r\n      Message1 = \"Congratulations! You save the robary 🤩!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"nd index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n    }\r\n    else\r\n    {\r\n      findTrain51();\r\n      findTrain20();\r\n       Message1 = \"Oops!!🙊 this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 = \"No. of Beads in currentBox: \" + Weight[2] ;\r\n      if(Weight[Thief]>Weight[2])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n    }\r\n  }\r\n  else{\r\n        imp();\r\n    Message1 =\"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"3 box\");\r\n  }\r\n} \r\nconst findId3 =  ()=>{\r\nif(PoliceMan==3)\r\n  {\r\n    if(Weight[Thief]==Weight[3])\r\n    {\r\n      Thief3();\r\n      findTrain21();\r\n      Message1 = \"Congratulations! You save the robary 🤩!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"rd index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n    }\r\n    else\r\n    {\r\n      findTrain21();\r\n      findTrain30();\r\n       Message1 = \"Oops!!🙊 this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 =  \"No. of Beads in currentBox: \" + Weight[3] ;\r\n      if(Weight[Thief]>Weight[3])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 =\"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"3 box\");\r\n  }\r\n} \r\nconst findId4 =  ()=>{\r\nif(PoliceMan==4)\r\n  {\r\n    if(Weight[Thief]==Weight[4])\r\n    {\r\n      Thief4();\r\n      findTrain31();\r\n      Message1 = \"Congratulations! You save the robary 🤩!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"th index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n    }\r\n    else\r\n    {\r\n      findTrain31();\r\n      findTrain40();\r\n       Message1 = \"Oops!!🙊 this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 =  \"No. of Beads in currentBox: \" + Weight[4] ;\r\n      if(Weight[Thief]>Weight[4])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 =\"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"4 box\");\r\n  }\r\n} \r\nconst findId5 =  ()=>{\r\nif(PoliceMan==5)\r\n  {\r\n    if(Weight[Thief]==Weight[5])\r\n    {\r\n      Thief5();\r\n      Message1 = \"Congratulations! You save the robary 🤩!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"th index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n    }\r\n    else\r\n    {\r\n      findTrain50();\r\n       Message1 = \"Oops!!🙊 this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 =  \"No. of Beads in currentBox: \" + Weight[5] ;\r\n      if(Weight[Thief]>Weight[5])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 =\"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"5 box\");\r\n  }\r\n} \r\nconst findId6 =  ()=>{\r\nif(PoliceMan==6)\r\n  {\r\n    if(Weight[Thief]==Weight[6])\r\n    {\r\n      Thief6();\r\n      findTrain81();\r\n      Message1 = \"Congratulations! You save the robary 🤩!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"th index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n    }\r\n    else\r\n    {\r\n      findTrain81();\r\n      findTrain60();\r\n       Message1 = \"Oops!!🙊 this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 =  \"No. of Beads in currentBox: \" + Weight[6] ;\r\n      if(Weight[Thief]>Weight[6])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 =\"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"6 box\");\r\n  }\r\n} \r\nconst findId7 =  ()=>{\r\nif(PoliceMan==7)\r\n  {\r\n    if(Weight[Thief]==Weight[7])\r\n    {\r\n      Thief7();\r\n      findTrain61();\r\n      Message1 = \"Congratulations! You save the robary 🤩!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"th index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n    }\r\n    else\r\n    {\r\n      findTrain61();\r\n      findTrain70();\r\n       Message1 = \"Oops!!🙊 this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 =  \"No. of Beads in currentBox: \" + Weight[7] ;\r\n      if(Weight[Thief]>Weight[7])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 =\"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"7 box\");\r\n  }\r\n} \r\n\r\nconst findId8 =  ()=>{\r\nif(PoliceMan==8)\r\n  {\r\n    if(Weight[Thief]==Weight[8])\r\n    {\r\n      Thief8();\r\n      findTrain51();\r\n      Message1 = \"Congratulations! You save the robary 🤩!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"th index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n    }\r\n    else\r\n    {\r\n      findTrain51();\r\n      findTrain80();\r\n       Message1 = \"Oops!!🙊 this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 = \"No. of Beads in currentBox: \" + Weight[8] ;\r\n      if(Weight[Thief]>Weight[8])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 =\"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"8 box\");\r\n  }\r\n}\r\nconst findId9 =  ()=>{\r\n  if(PoliceMan==9)\r\n  {\r\n    if(Weight[Thief]==Weight[9])\r\n    {\r\n      findTrain81();\r\n      Thief9();\r\n      Message1 = \"Congratulations! You save the robary 🤩!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"th index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n    }\r\n    else\r\n    {\r\n      findTrain81();\r\n      findTrain90();\r\n       Message1 = \"Oops!!🙊 this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 =  \"No. of Beads in currentBox: \" + Weight[9] ;\r\n      if(Weight[Thief]>Weight[9])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 =\"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"9 box\");\r\n  }\r\n} \r\nconst findId10 =  ()=>{\r\nif(PoliceMan==10)\r\n  {\r\n    if(Weight[Thief]==Weight[10])\r\n    {\r\n      findTrain91();\r\n      Thief10();\r\n      Message1 = \"Congratulations! You save the robary 🤩!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"th index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n    }\r\n    else\r\n    {\r\n      findTrain91();\r\n      findTrain100();\r\n       Message1 = \"Oops!!🙊 this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 = \"No. of Beads in currentBox: \" + Weight[10] ;\r\n      if(Weight[Thief]>Weight[10])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 =\"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"10 box\");\r\n  }\r\n} \r\nconst findTrain10 = ()=>\r\n{\r\n  setPhoto1(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead1.png?raw=true\");\r\n}\r\nconst findTrain11 = ()=>\r\n{\r\n  setPhoto1(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst findTrain20 = ()=>\r\n{\r\n  setPhoto2(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead2.png?raw=true\");\r\n}\r\nconst findTrain21 = ()=>\r\n{\r\n  setPhoto2(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst findTrain30 = ()=>\r\n{\r\n  setPhoto3(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead3.png?raw=true\");\r\n}\r\nconst findTrain31 = ()=>\r\n{\r\n  setPhoto3(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst findTrain40 = ()=>\r\n{\r\n  setPhoto4(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead4.png?raw=true\");\r\n}\r\nconst findTrain41 = ()=>\r\n{\r\n  setPhoto4(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst findTrain50 = ()=>\r\n{\r\n  setPhoto5(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead1.png?raw=true\");\r\n}\r\nconst findTrain51 = ()=>\r\n{\r\n  setPhoto5(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst findTrain60 = ()=>\r\n{\r\n  setPhoto6(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead2.png?raw=true\");\r\n}\r\nconst findTrain61 = ()=>\r\n{\r\n  setPhoto6(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst findTrain70 = ()=>\r\n{\r\n  setPhoto7(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead3.png?raw=true\");\r\n}\r\nconst findTrain71 = ()=>\r\n{\r\n  setPhoto7(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst findTrain80 = ()=>\r\n{\r\n  setPhoto8(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead1.png?raw=true\");\r\n}\r\nconst findTrain81 = ()=>\r\n{\r\n  setPhoto8(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst findTrain90 = ()=>\r\n{\r\n  setPhoto9(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead4.png?raw=true\");\r\n}\r\nconst findTrain91 = ()=>\r\n{\r\n  setPhoto9(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst findTrain100 = ()=>\r\n{\r\n  setPhoto10(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead4.png?raw=true\");\r\n}\r\nconst findTrain101 = ()=>\r\n{\r\n  setPhoto10(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst Thief1 = ()=>\r\n{\r\n  setPhoto1(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst Thief2 = ()=>\r\n{\r\n  setPhoto2(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst Thief3 = ()=>\r\n{\r\n  setPhoto3(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst Thief4 = ()=>\r\n{\r\n  setPhoto4(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst Thief5 = ()=>\r\n{\r\n  setPhoto5(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst Thief6 = ()=>\r\n{\r\n  setPhoto6(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst Thief7 = ()=>\r\n{\r\n  setPhoto7(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst Thief8 = ()=>\r\n{\r\n  setPhoto8(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst Thief9 = ()=>\r\n{\r\n  setPhoto9(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst Thief10 = ()=>\r\n{\r\n  setPhoto10(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst imp = ()=>\r\n{\r\n  if(photo11==\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\")\r\n  {\r\n    setPhoto11(\"https://bit.ly/2XNRqc1\")\r\n  }\r\n  else\r\n  {\r\n    setPhoto11(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\")\r\n  }\r\n}\r\n  return <div className=\"linearSearch\">\r\n  <div className=\"CardCSS\">\r\n  <Card \r\n    message={Message1}\r\n  />\r\n  <Card \r\n    message={Message2}\r\n  />\r\n    <Card \r\n    message={Message3}\r\n  />\r\n  <Card \r\n    message={Message4}\r\n  />\r\n\r\n  </div>\r\n    <button id=\"1\" onClick ={findId1}  className=\" drum\" >\r\n    <img id=\"img\"  src = {photo1}  className=\"image\"  alt=\"/\">\r\n    </img>\r\n    </button>\r\n   \r\n    <button  id=\"2\"  onClick ={findId2}  className=\" drum\"> <img  src={photo2}  className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"3\" onClick ={findId3}  className=\" drum\"> <img src={photo3} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"4\" onClick ={findId4}  className=\" drum\"> <img src={photo4} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"5\" onClick ={findId5} className=\" drum\"> <img src={photo5} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"6\" onClick ={findId6} className=\" drum\"> <img src={photo6} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"7\" onClick ={findId7} className=\" drum\"> <img src={photo7} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"8\" onClick ={findId8} className=\" drum\"> <img src={photo8} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"9\" onClick ={findId9} className=\" drum\"> <img src={photo9} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"10\" onClick ={findId10} className=\" drum\">\r\n      <img src={photo10} className=\"image\" alt=\"/\"></img>\r\n    </button>\r\n  \r\n\r\n  </div>;\r\n\r\n}\r\n\r\nexport default BinarySearch;","C:\\Users\\dell\\Desktop\\hackathonNITP\\illiterate\\src\\Components\\BeadStory.js",["145","146"],"import React from \"react\";\r\nimport \"./BeadStory.css\";\r\nimport Lottie from \"react-lottie\";\r\nimport diamond from \"../Lottie/diamond.json\";\r\nimport pearl from \"../Lottie/pearl.json\";\r\nimport fast from \"../Lottie/fastcar.json\";\r\n\r\nimport BinarySearch from \"./BinarySearch\";\r\n\r\nexport default function BeadStory() {\r\n  return (\r\n\r\n      \r\n\r\n  <div className=\"binary_search\">\r\n      <div className=\"binary_heading\">\r\n        \r\n            <h1 className=\"mystery\"> Mystery <span className=\"beady\"> Beads</span></h1>\r\n            \r\n            <div className=\"diamond\">\r\n            <Lottie options={{ animationData:diamond,}} />\r\n            </div>\r\n          \r\n      </div>\r\n      <div className=\"binary_mid\">\r\n          <div className=\"binary_story\">\r\n            <div className=\"binary_start\">\r\n               <span className=\"hello\">Hey Champ!</span>\r\n               <p>Welcome to the exciting and fascinating journey of the mind.\r\n                  There is a place that shines like a sun, It’s a \r\n                  <span className=\"beautiful\"> beautiful</span> place which consists of numerous \r\n                  <span className=\"gem\">gemstones</span> diamonds and especially that place know for it’s \r\n                  <span className=\"string\">“strings of beads”</span> because every string has a different number of beads.</p>\r\n            </div>\r\n            <div className=\"diamond_area\">\r\n            <Lottie options={{ animationData:pearl,}} />\r\n            </div>\r\n          </div>\r\n          <div className=\"binary_story\">\r\n          <img className=\"diamond_storypartone\" src=\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Jwelry.png?raw=true\" />\r\n\r\n           <div className=\"binary_midway\">\r\n             <p>\r\n             One day the people of that place held a <span classname=\"meeting\">meeting</span> and discuss among \r\n             themselves that why not organize a <span classname=\"fair\">fair</span> for all the people over the\r\n              world so that they get overwhelmed by seeing the real gemstones of our world.  \r\n              Where it is <span classname=\"good\">good, </span>, there is always a <span classname=\"bad\">bad</span>. \r\n             </p>\r\n             </div>\r\n          </div>\r\n          <div className=\"binary_story\">\r\n           <div className=\"binary_midway\">\r\n              <p>\r\n              So that’s why here you are welcomed as a \r\n              <span className=\"detective\"> detective </span>. \r\n              On reaching the fare point you are informed that the <span className=\"robber\">robber</span> has already \r\n              arrived there and had planning to rob their precious “string of beads” which consist of \r\n              <span className=\"x\"> “x” </span> number of beads and they are smart enough to \r\n              <span className=\"escape\">escape</span> with the precious “string of beads”.\r\n              </p>\r\n           </div>\r\n\r\n     \r\n             <img className=\"diamond_storyparttwo\" src=\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Detective.png?raw=true\" />\r\n          \r\n           \r\n           </div>\r\n          <div className=\"binary_story\">\r\n          <div className=\"diamond_game\">\r\n            <Lottie options={{ animationData:fast,}} />\r\n             </div>\r\n            <div className=\"binary_last\">\r\n              <p>So here your <span className=\"role\">role</span> came into play, you have to <span classname=\"reach\">reach out</span>\r\n               to that particular string of beads before the robbers went.\r\n               <span className=\"hint_statement\">( <span className=\"hint\">Hint:</span> Reach at the minimum time )</span>\r\n              </p>\r\n            </div>\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"bead__tsk\">\r\n              Your Task Begins\r\n            </div>\r\n            <div className=\"problemStatement\">\r\n        <h1>Problem:</h1>\r\n        <p>There is 10 jewelry box, each is having a string of beads. Out of all the strings, there is an imposter i.e. precious jewelry is also set in the box. You are provided with the number of beads that jewelry is made of. Try to get the index number of the box out of the series in which that jewelry is placed.</p>\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <div className=\"beads__beads\">\r\n              <BinarySearch />\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"beads__click\">\r\n              Click on the Box To Check For Beads\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n         <div className=\"binary__blog\">\r\n        <h2>Binary Search</h2>\r\n        <p>\r\n          Binary Search Algorithm is one of the widely used searching techniques\r\n          on a sorted array. This searching technique follows the divide and\r\n          conquer strategy. The search space always reduces to half in every\r\n          iteration.\r\n        </p>\r\n        <video\r\n          className=\"home__logo\"\r\n          autoPlay={true}\r\n          loop={true}\r\n          muted={true}\r\n          playsInline={true}\r\n        >\r\n          <source\r\n            src=\"https://github.com/rohitsigar/ILLITRATE/blob/master/WhatsApp%20Video%202021-01-18%20at%2000.40.12.mp4?raw=true\"\r\n            type=\"video/webm\"\r\n          />\r\n        </video>\r\n        <h4> Approach </h4>\r\n        <ul>\r\n          <li>\r\n            <p className=\"binary_step\">\r\n              Array is supposed to be sorted in ascending order.\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p className=\"binary_step\">\r\n              Firstly initialize the two pointers, start at 0 and end at the\r\n              last index of the array\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p className=\"binary_step\">\r\n              Next, we will introduce another variable mid which will mark the\r\n              middle of the current array. That will be computed as\r\n              (low+high)/2.\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p className=\"binary_step\">\r\n            If the element present at the mid index is equal to the element to be searched, then just return the mid index.\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p className=\"binary_step\">\r\n            If the element to be searched is smaller than the element present at the mid index, move end to mid-1, and all RHS will get discarded.            </p>\r\n          </li>\r\n          <li>\r\n            <p className=\"binary_step\">\r\n            If the element to be searched is greater than the element present at the mid index, move beg to mid+1, and all LHS will get discarded.            </p>\r\n          </li>\r\n        </ul>\r\n        <img\r\n          className=\"binary__code\"\r\n          src=\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/binarySearch%20Snippet.PNG?raw=true\"\r\n          alt=\"/\"\r\n        ></img>\r\n        {/* <p classname=\"binary_ques\">\r\n          If there is a n sized array & you have to find element-x from the\r\n          array, then what is the average number of indexes you have to\r\n          traverse?\r\n          <span className=\"binary_think\">Think about it?</span>\r\n        </p> */}\r\n        <h4> Time Complexity </h4>\r\n        <p classname=\"binary_timeCom\">\r\n        With each iteration, the search space is getting divided by that means\r\n         that in the current iteration we have to deal with half of the previous iteration array, \r\n         and this step will continue till start reaches the end. Best case is where we found the searched element\r\n          exactly at mid of array\r\n          <br></br>\r\n          <h3>Best: O(1) </h3>\r\n          <h3> Average: O(logn) </h3>\r\n          <h3> Worst: O(logn)</h3>\r\n        </p>\r\n        <h4> Why to prefer ?</h4>\r\n        <p className=\"binary_diff\">\r\n        Since we always want to have less time complexity, and we know in linear searching, time is taken to search elements increases with an increase in the number of elements but in binary searching, it is done to either half of the original array. Also, Linear search performs\r\n         equality comparisons and Binary search performs ordering comparisons.\r\n        </p>\r\n\r\n        <h6 className=\"binary__con\">\r\n          Concluding above article, we get to know that is a quick way to \r\n          find a value in a sorted sequesnce. Binary search maintains a contiguous subsequence\r\n          of the starting sequence where the target value is surely located i.e. the search space.\r\n        </h6>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n  \r\n\r\n}\r\n\r\n",{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":11,"column":8,"nodeType":"153","messageId":"154","endLine":11,"endColumn":20},{"ruleId":"151","severity":1,"message":"155","line":7,"column":8,"nodeType":"153","messageId":"154","endLine":7,"endColumn":18},{"ruleId":"151","severity":1,"message":"156","line":8,"column":10,"nodeType":"153","messageId":"154","endLine":8,"endColumn":16},{"ruleId":"151","severity":1,"message":"157","line":6,"column":8,"nodeType":"153","messageId":"154","endLine":6,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":4,"column":14,"nodeType":"160","messageId":"161","endLine":4,"endColumn":48},{"ruleId":"162","severity":1,"message":"163","line":15,"column":17,"nodeType":"164","messageId":"165","endLine":15,"endColumn":19},{"ruleId":"166","severity":1,"message":"167","line":20,"column":11,"nodeType":"153","messageId":"168","endLine":20,"endColumn":12},{"ruleId":"162","severity":1,"message":"163","line":25,"column":15,"nodeType":"164","messageId":"165","endLine":25,"endColumn":17},{"ruleId":"151","severity":1,"message":"169","line":28,"column":7,"nodeType":"153","messageId":"154","endLine":28,"endColumn":18},{"ruleId":"151","severity":1,"message":"170","line":33,"column":9,"nodeType":"153","messageId":"154","endLine":33,"endColumn":15},{"ruleId":"151","severity":1,"message":"171","line":38,"column":8,"nodeType":"153","messageId":"154","endLine":38,"endColumn":14},{"ruleId":"151","severity":1,"message":"172","line":38,"column":15,"nodeType":"153","messageId":"154","endLine":38,"endColumn":24},{"ruleId":"162","severity":1,"message":"163","line":64,"column":15,"nodeType":"164","messageId":"165","endLine":64,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":66,"column":21,"nodeType":"164","messageId":"165","endLine":66,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":84,"column":15,"nodeType":"164","messageId":"165","endLine":84,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":86,"column":21,"nodeType":"164","messageId":"165","endLine":86,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":111,"column":13,"nodeType":"164","messageId":"165","endLine":111,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":113,"column":21,"nodeType":"164","messageId":"165","endLine":113,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":138,"column":13,"nodeType":"164","messageId":"165","endLine":138,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":140,"column":21,"nodeType":"164","messageId":"165","endLine":140,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":165,"column":13,"nodeType":"164","messageId":"165","endLine":165,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":167,"column":21,"nodeType":"164","messageId":"165","endLine":167,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":192,"column":13,"nodeType":"164","messageId":"165","endLine":192,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":194,"column":21,"nodeType":"164","messageId":"165","endLine":194,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":219,"column":13,"nodeType":"164","messageId":"165","endLine":219,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":221,"column":21,"nodeType":"164","messageId":"165","endLine":221,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":249,"column":17,"nodeType":"164","messageId":"165","endLine":249,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":252,"column":21,"nodeType":"164","messageId":"165","endLine":252,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":278,"column":15,"nodeType":"164","messageId":"165","endLine":278,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":280,"column":21,"nodeType":"164","messageId":"165","endLine":280,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":305,"column":13,"nodeType":"164","messageId":"165","endLine":305,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":307,"column":21,"nodeType":"164","messageId":"165","endLine":307,"endColumn":23},{"ruleId":"151","severity":1,"message":"173","line":407,"column":7,"nodeType":"153","messageId":"154","endLine":407,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":453,"column":13,"nodeType":"164","messageId":"165","endLine":453,"endColumn":15},{"ruleId":"174","severity":1,"message":"175","line":23,"column":13,"nodeType":"176","endLine":27,"endColumn":14},{"ruleId":"151","severity":1,"message":"177","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":23},{"ruleId":"158","severity":1,"message":"159","line":4,"column":14,"nodeType":"160","messageId":"161","endLine":4,"endColumn":48},{"ruleId":"162","severity":1,"message":"163","line":18,"column":17,"nodeType":"164","messageId":"165","endLine":18,"endColumn":19},{"ruleId":"166","severity":1,"message":"167","line":23,"column":11,"nodeType":"153","messageId":"168","endLine":23,"endColumn":12},{"ruleId":"162","severity":1,"message":"163","line":28,"column":15,"nodeType":"164","messageId":"165","endLine":28,"endColumn":17},{"ruleId":"151","severity":1,"message":"169","line":31,"column":7,"nodeType":"153","messageId":"154","endLine":31,"endColumn":18},{"ruleId":"151","severity":1,"message":"171","line":34,"column":8,"nodeType":"153","messageId":"154","endLine":34,"endColumn":14},{"ruleId":"151","severity":1,"message":"172","line":34,"column":15,"nodeType":"153","messageId":"154","endLine":34,"endColumn":24},{"ruleId":"166","severity":1,"message":"167","line":54,"column":9,"nodeType":"153","messageId":"168","endLine":54,"endColumn":10},{"ruleId":"162","severity":1,"message":"163","line":68,"column":15,"nodeType":"164","messageId":"165","endLine":68,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":70,"column":21,"nodeType":"164","messageId":"165","endLine":70,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":105,"column":15,"nodeType":"164","messageId":"165","endLine":105,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":107,"column":21,"nodeType":"164","messageId":"165","endLine":107,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":140,"column":13,"nodeType":"164","messageId":"165","endLine":140,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":142,"column":21,"nodeType":"164","messageId":"165","endLine":142,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":175,"column":13,"nodeType":"164","messageId":"165","endLine":175,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":177,"column":21,"nodeType":"164","messageId":"165","endLine":177,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":210,"column":13,"nodeType":"164","messageId":"165","endLine":210,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":212,"column":21,"nodeType":"164","messageId":"165","endLine":212,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":244,"column":13,"nodeType":"164","messageId":"165","endLine":244,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":246,"column":21,"nodeType":"164","messageId":"165","endLine":246,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":279,"column":13,"nodeType":"164","messageId":"165","endLine":279,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":281,"column":21,"nodeType":"164","messageId":"165","endLine":281,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":315,"column":13,"nodeType":"164","messageId":"165","endLine":315,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":317,"column":21,"nodeType":"164","messageId":"165","endLine":317,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":350,"column":15,"nodeType":"164","messageId":"165","endLine":350,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":352,"column":21,"nodeType":"164","messageId":"165","endLine":352,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":385,"column":13,"nodeType":"164","messageId":"165","endLine":385,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":387,"column":21,"nodeType":"164","messageId":"165","endLine":387,"endColumn":23},{"ruleId":"151","severity":1,"message":"178","line":423,"column":7,"nodeType":"153","messageId":"154","endLine":423,"endColumn":18},{"ruleId":"151","severity":1,"message":"179","line":447,"column":7,"nodeType":"153","messageId":"154","endLine":447,"endColumn":18},{"ruleId":"151","severity":1,"message":"180","line":471,"column":7,"nodeType":"153","messageId":"154","endLine":471,"endColumn":18},{"ruleId":"151","severity":1,"message":"173","line":495,"column":7,"nodeType":"153","messageId":"154","endLine":495,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":541,"column":13,"nodeType":"164","messageId":"165","endLine":541,"endColumn":15},{"ruleId":"181","severity":1,"message":"182","line":40,"column":11,"nodeType":"176","endLine":40,"endColumn":140},{"ruleId":"181","severity":1,"message":"182","line":64,"column":14,"nodeType":"176","endLine":64,"endColumn":146},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'LinearSearch' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'purple' is defined but never used.","'bagmoney' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'i' is already defined.","redeclared","'ThiefWeight' is assigned a value but never used.","'findId' is assigned a value but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'findTrain101' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'useRef' is defined but never used.","'findTrain11' is assigned a value but never used.","'findTrain41' is assigned a value but never used.","'findTrain71' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]