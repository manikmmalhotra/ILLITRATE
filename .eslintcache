[{"C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\index.js":"1","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\reportWebVitals.js":"2","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\App.js":"3","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\Footer.js":"4","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\Header.js":"5","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\Algo.js":"6","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\Home.js":"7","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\About.js":"8","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\LinearSearch.js":"9","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\ComponentCard.js":"10","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\CompleStory.js":"11","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\Button.js":"12","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\EventCard.js":"13","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\Card.js":"14","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\BinarySearch.js":"15","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\BeadStory.js":"16"},{"size":306,"mtime":1610776122995,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1610776122996,"results":"19","hashOfConfig":"18"},{"size":1905,"mtime":1610924872847,"results":"20","hashOfConfig":"18"},{"size":270,"mtime":1610785634877,"results":"21","hashOfConfig":"18"},{"size":719,"mtime":1610786937330,"results":"22","hashOfConfig":"18"},{"size":3137,"mtime":1610901124231,"results":"23","hashOfConfig":"18"},{"size":1974,"mtime":1610785634880,"results":"24","hashOfConfig":"18"},{"size":735,"mtime":1610786937317,"results":"25","hashOfConfig":"18"},{"size":16890,"mtime":1610924872919,"results":"26","hashOfConfig":"18"},{"size":1430,"mtime":1610878531971,"results":"27","hashOfConfig":"18"},{"size":6375,"mtime":1610901124246,"results":"28","hashOfConfig":"18"},{"size":188,"mtime":1610786937320,"results":"29","hashOfConfig":"18"},{"size":631,"mtime":1610901124248,"results":"30","hashOfConfig":"18"},{"size":478,"mtime":1610878531887,"results":"31","hashOfConfig":"18"},{"size":17991,"mtime":1610924872961,"results":"32","hashOfConfig":"18"},{"size":8475,"mtime":1610924872895,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1euqfxy",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\index.js",[],["72","73"],"C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\reportWebVitals.js",[],"C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\App.js",[],"C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\Footer.js",[],"C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\Header.js",["74","75","76","77","78","79"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport \"./Header.css\";\r\nimport Button from \"./Button\";\r\n\r\nexport default function ButtonAppBar() {\r\n  return(\r\n    <div className=\"header\">\r\n      <div className=\"header-left\">\r\n      <h4 className=\"title\">ILLITRATE</h4>\r\n      </div>\r\n      <div className=\"header-right\">\r\n      <Button buttonName=\"header-button\" label=\"Login\"/>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\Algo.js",[],"C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\Home.js",[],"C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\About.js",[],"C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\LinearSearch.js",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109"],"import React, { useRef, useState } from \"react\";\r\nimport \"./LinearSearch.css\";\r\nimport Card from \"./Card\";\r\nvar Weight = new Array(1,2,3,4,5,6,7,8,9,10,11);\r\nvar Message3 = \"Weight\";\r\nvar Message1 = \"Ready to Scratch a Lie! ðŸ˜œ\";\r\nvar Message2 = \"Traverse the array\";\r\nvar PoliceMan = 1;\r\nvar Thief ; \r\nvar b = true;\r\nfunction trial(){\r\n  for(var i=1; i<Weight.length;i++)\r\n  {\r\n    Weight[i] = Math.floor(Math.random()*100)\r\n    while(Weight==0){\r\n      Weight[i] = Math.floor(Math.random()*100)\r\n    }\r\n  }\r\n  Weight.sort(function(a, b){return a - b});\r\n  for(var i=1;i<11;i++)\r\n  {\r\n    console.log(Weight[i]);\r\n  }\r\n   Thief = Math.floor(Math.random()*10)\r\n   while(Thief==0){\r\n    Thief= Math.floor(Math.random()*10)\r\n  }\r\n  var ThiefWeight = Weight[Thief];\r\n}\r\nfunction LinearSearch() {\r\n\r\n  const commentSection = useRef(null);\r\n  const findId = () => window.scrollTo({\r\n    top: commentSection.current.offSetTop,\r\n    behavior:\"smooth\"\r\n  });\r\n\r\nconst [values,setValues] = useState(0);\r\n// console.log(values);\r\nconst [photo1,setPhoto1] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1.png?raw=true\");\r\nconst [photo2,setPhoto2] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train2.png?raw=true\");\r\nconst [photo3,setPhoto3] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1.png?raw=true\");\r\nconst [photo4,setPhoto4] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train4.png?raw=true\");\r\nconst [photo5,setPhoto5] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1.png?raw=true\");\r\nconst [photo6,setPhoto6] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train2.png?raw=true\");\r\nconst [photo7,setPhoto7] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1.png?raw=true\");\r\nconst [photo8,setPhoto8] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train4.png?raw=true\");\r\nconst [photo9,setPhoto9] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1.png?raw=true\");\r\nconst [photo10,setPhoto10] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train2.png?raw=true\");\r\nconst [photo11,setPhoto11] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/engine1.png?raw=true\");\r\n\r\n\r\nif(b)\r\n{\r\n  trial();\r\n  b = false;\r\n}\r\nconsole.log(Thief);\r\nconsole.log(PoliceMan);\r\n\r\n//Thief=10;\r\n\r\nconst findId1 =  ()=>{\r\n  if(PoliceMan==1)\r\n  {\r\n    if(Weight[Thief]==Weight[1])\r\n    {\r\n      Thief1();\r\n      Message1 = \"Congratulations! You caught the thief ðŸ¤©!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"st index of the Compartment\";\r\n\r\n     }\r\n    else\r\n    {\r\n      findTrain10();\r\n       Message1 = \"Oops!!ðŸ™Š try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      Message3 = \"Passenger Weight : \" + Weight[1] + \"kg\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n} \r\nconst findId2 =  ()=>{\r\n  if(PoliceMan==2)\r\n  {\r\n    if(Weight[Thief]==Weight[2])\r\n    {\r\n      Thief2();\r\n      findTrain11();\r\n      Message1 = \"Congratulations! You caught the thief ðŸ¤©!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"nd index of the Compartment\";\r\n    }\r\n    else\r\n    {\r\n      findTrain11();\r\n      findTrain20();\r\n       Message1 = \"Oops!!ðŸ™Š try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      Message3 = \"Passenger Weight : \" + Weight[2] + \"kg\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n  else{\r\n    console.log(\"2 box\");\r\n    imp();\r\n    Message1 = \"PoliceMan is not reached to this Compartment Yet!\";\r\n    Message2 = \"You found the required number on \" + PoliceMan + \"rd index of the Compartment\";\r\n  }\r\n} \r\nconst findId3 =  ()=>{\r\nif(PoliceMan==3)\r\n  {\r\n    if(Weight[Thief]==Weight[3])\r\n    {\r\n      Thief3();\r\n      findTrain21();\r\n      Message1 = \"Congratulations! You caught the thief ðŸ¤©!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"rd index of the Compartment\";\r\n    }\r\n    else\r\n    {\r\n      findTrain21();\r\n      findTrain30();\r\n       Message1 = \"Oops!!ðŸ™Š try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      Message3 = \"Passenger Weight : \" + Weight[3] + \"kg\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 = \"PoliceMan is not reached to this Compartment Yet!\";\r\n    Message2 = \"In Linear Search : Traversing is done Sequentially\";\r\n    console.log(\"3 box\");\r\n  }\r\n} \r\nconst findId4 =  ()=>{\r\nif(PoliceMan==4)\r\n  {\r\n    if(Weight[Thief]==Weight[4])\r\n    {\r\n      Thief4();\r\n      findTrain31();\r\n      Message1 = \"Congratulations! You caught the thief ðŸ¤©!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"th index of the Compartment\";\r\n    }\r\n    else\r\n    {\r\n      findTrain31();\r\n      findTrain40();\r\n       Message1 = \"Oops!!ðŸ™Š try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      Message3 = \"Passenger Weight : \" + Weight[4] + \"kg\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 = \"PoliceMan is not reached to this Compartment Yet!\";\r\n    Message2 = \"In Linear Search : Traversing is done Sequentially\";\r\n    console.log(\"4 box\");\r\n  }\r\n} \r\nconst findId5 =  ()=>{\r\nif(PoliceMan==5)\r\n  {\r\n    if(Weight[Thief]==Weight[5])\r\n    {\r\n      findTrain41();\r\n      Thief5();\r\n      Message1 = \"Congratulations! You caught the thief ðŸ¤©!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"th index of the Compartment\";\r\n    }\r\n    else\r\n    {\r\n      findTrain41();\r\n      findTrain50();\r\n       Message1 = \"Oops!!ðŸ™Š try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      Message3 = \"Passenger Weight : \" + Weight[5] + \"kg\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 = \"PoliceMan is not reached to this Compartment Yet!\";\r\n    Message2 = \"In Linear Search : Traversing is done Sequentially\";\r\n    console.log(\"5 box\");\r\n  }\r\n} \r\nconst findId6 =  ()=>{\r\nif(PoliceMan==6)\r\n  {\r\n    if(Weight[Thief]==Weight[6])\r\n    {\r\n      Thief6();\r\n      findTrain51();\r\n      Message1 = \"Congratulations! You caught the thief ðŸ¤©!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"th index of the Compartment\";\r\n    }\r\n    else\r\n    {\r\n      findTrain51();\r\n      findTrain60();\r\n       Message1 = \"Oops!!ðŸ™Š try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      Message3 = \"Passenger Weight : \" + Weight[6] + \"kg\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 = \"PoliceMan is not reached to this Compartment Yet!\";\r\n    Message2 = \"In Linear Search : Traversing is done Sequentially\";\r\n    console.log(\"6 box\");\r\n  }\r\n} \r\nconst findId7 =  ()=>{\r\nif(PoliceMan==7)\r\n  {\r\n    if(Weight[Thief]==Weight[7])\r\n    {\r\n      Thief7();\r\n      findTrain61();\r\n      Message1 = \"Congratulations! You caught the thief ðŸ¤©!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"th index of the Compartment\";\r\n    }\r\n    else\r\n    {\r\n      findTrain61();\r\n      findTrain70();\r\n       Message1 = \"Oops!!ðŸ™Š try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      Message3 = \"Passenger Weight : \" + Weight[7] + \"kg\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 = \"PoliceMan is not reached to this Compartment Yet!\";\r\n    Message2 = \"In Linear Search : Traversing is done Sequentially\";\r\n    console.log(\"7 box\");\r\n  }\r\n} \r\n\r\nconst findId8 =  ()=>{\r\n\r\n\r\n    if(PoliceMan==8)\r\n\r\n  {\r\n    if(Weight[Thief]==Weight[8])\r\n\r\n    {\r\n      Thief8();\r\n      findTrain71();\r\n      Message1 = \"Congratulations! You caught the thief ðŸ¤©!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"th index of the Compartment\";\r\n    }\r\n    else\r\n    {\r\n      findTrain71();\r\n      findTrain80();\r\n       Message1 = \"Oops!!ðŸ™Š try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      Message3 = \"Passenger Weight : \" + Weight[8] + \"kg\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 = \"PoliceMan is not reached to this Compartment Yet!\";\r\n    Message2 = \"In Linear Search : Traversing is done Sequentially\";\r\n    console.log(\"8 box\");\r\n  }\r\n}\r\nconst findId9 =  ()=>{\r\n  if(PoliceMan==9)\r\n  {\r\n    if(Weight[Thief]==Weight[9])\r\n    {\r\n      findTrain81();\r\n      Thief9();\r\n      Message1 = \"Congratulations! You caught the thief ðŸ¤©!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"th index of the Compartment\";\r\n    }\r\n    else\r\n    {\r\n      findTrain81();\r\n      findTrain90();\r\n       Message1 = \"Oops!!ðŸ™Š try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      Message3 = \"Passenger Weight : \" + Weight[9] + \"kg\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 = \"PoliceMan is not reached to this Compartment Yet!\";\r\n    Message2 = \"In Linear Search : Traversing is done Sequentially\";\r\n    console.log(\"9 box\");\r\n  }\r\n} \r\nconst findId10 =  ()=>{\r\nif(PoliceMan==10)\r\n  {\r\n    if(Weight[Thief]==Weight[10])\r\n    {\r\n      findTrain91();\r\n      Thief10();\r\n      Message1 = \"Congratulations! You caught the thief ðŸ¤©!\";\r\n      Message2 = \"You found the required number on \" + PoliceMan + \"th index of the Compartment\";\r\n      Message3 = \"Passenger Weight : \" + Weight[10] + \"kg\";\r\n    }\r\n    else\r\n    {\r\n      findTrain91();\r\n      findTrain100();\r\n       Message1 = \"Oops!!ðŸ™Š try another compartment\";\r\n      Message2 = \"Compartment[\" + PoliceMan + \"] != Weight of the Thief\";\r\n      PoliceMan++;\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 = \"PoliceMan is not reached to this Compartment Yet!\";\r\n    Message2 = \"In Linear Search : Traversing is done Sequentially\";\r\n    console.log(\"10 box\");\r\n  }\r\n} \r\nconst findTrain10 = ()=>\r\n{\r\n  setPhoto1(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/1%20pasanger.png?raw=true\");\r\n}\r\nconst findTrain11 = ()=>\r\n{\r\n  setPhoto1(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1Opacity%20(1).png?raw=true\");\r\n}\r\nconst findTrain20 = ()=>\r\n{\r\n  setPhoto2(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/2nd%20pasanger.png?raw=true\");\r\n}\r\nconst findTrain21 = ()=>\r\n{\r\n  setPhoto2(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train2Opacity.png?raw=true\");\r\n}\r\nconst findTrain30 = ()=>\r\n{\r\n  setPhoto3(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/3.png?raw=true\");\r\n}\r\nconst findTrain31 = ()=>\r\n{\r\n  setPhoto3(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1Opacity%20(1).png?raw=true\");\r\n}\r\nconst findTrain40 = ()=>\r\n{\r\n  setPhoto4(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/4th%20pasanger.png?raw=true\");\r\n}\r\nconst findTrain41 = ()=>\r\n{\r\n  setPhoto4(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train4Opacity.png?raw=true\");\r\n}\r\nconst findTrain50 = ()=>\r\n{\r\n  setPhoto5(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/5th%20passenger.png?raw=true\");\r\n}\r\nconst findTrain51 = ()=>\r\n{\r\n  setPhoto5(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1Opacity%20(1).png?raw=true\");\r\n}\r\nconst findTrain60 = ()=>\r\n{\r\n  setPhoto6(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/6.png?raw=true\");\r\n}\r\nconst findTrain61 = ()=>\r\n{\r\n  setPhoto6(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train2Opacity.png?raw=true\");\r\n}\r\nconst findTrain70 = ()=>\r\n{\r\n  setPhoto7(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/7th%20passenger.png?raw=true\");\r\n}\r\nconst findTrain71 = ()=>\r\n{\r\n  setPhoto7(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1Opacity%20(1).png?raw=true\");\r\n}\r\nconst findTrain80 = ()=>\r\n{\r\n  setPhoto8(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/8th%20passenger.png?raw=true\");\r\n}\r\nconst findTrain81 = ()=>\r\n{\r\n  setPhoto8(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train4Opacity.png?raw=true\");\r\n}\r\nconst findTrain90 = ()=>\r\n{\r\n  setPhoto9(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/motu.png?raw=true\");\r\n}\r\nconst findTrain91 = ()=>\r\n{\r\n  setPhoto9(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train1Opacity%20(1).png?raw=true\");\r\n}\r\nconst findTrain100 = ()=>\r\n{\r\n  setPhoto10(\"https://scontent.fdel6-1.fna.fbcdn.net/v/t1.0-9/139941229_102333658518873_3041693399418250157_o.jpg?_nc_cat=108&ccb=2&_nc_sid=730e14&_nc_ohc=9QrThqK6StcAX9JYt55&_nc_ht=scontent.fdel6-1.fna&oh=9d3f923a2eb2e0fb3033237a0ac7e24b&oe=6028DE6A\");\r\n}\r\nconst findTrain101 = ()=>\r\n{\r\n  setPhoto10(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/Train2Opacity.png?raw=true\");\r\n}\r\nconst Thief1 = ()=>\r\n{\r\n  setPhoto1(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst Thief2 = ()=>\r\n{\r\n  setPhoto2(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst Thief3 = ()=>\r\n{\r\n  setPhoto3(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst Thief4 = ()=>\r\n{\r\n  setPhoto4(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst Thief5 = ()=>\r\n{\r\n  setPhoto5(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst Thief6 = ()=>\r\n{\r\n  setPhoto6(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst Thief7 = ()=>\r\n{\r\n  setPhoto7(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst Thief8 = ()=>\r\n{\r\n  setPhoto8(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst Thief9 = ()=>\r\n{\r\n  setPhoto9(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst Thief10 = ()=>\r\n{\r\n  setPhoto10(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/thief.png?raw=true\");\r\n}\r\nconst imp = ()=>\r\n{\r\n  if(photo11==\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/engine1.png?raw=true\")\r\n  {\r\n    setPhoto11(\"https://bit.ly/3ijtQxj\")\r\n  }\r\n  else\r\n  {\r\n    setPhoto11(\"https://github.com/rohitsigar/ILLITRATE/blob/Rohita/src/Assets/engine1.png?raw=true\")\r\n  }\r\n}\r\n  return <div className=\"linearSearch\">\r\n  <div className=\"CardCSS\">\r\n  <Card \r\n    message={`Result = ${Message1}`}\r\n  />\r\n  <Card \r\n    message={`Code Logic = ${Message2}`}\r\n  />\r\n  <Card \r\n    message={Message3}\r\n  />\r\n\r\n\r\n  </div>\r\n  <img className =\"Engine\" src = {photo11} alt = \"/\"></img>\r\n    <button id=\"1\" onClick ={findId1}  className=\" drum\" >\r\n    <img id=\"img\"  src = {photo1}  className=\"image\"  alt=\"/\">\r\n    </img>\r\n    </button>\r\n   \r\n    <button  id=\"2\"  onClick ={findId2}  className=\" drum\"> <img  src={photo2}  className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"3\" onClick ={findId3}  className=\" drum\"> <img src={photo3} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"4\" onClick ={findId4}  className=\" drum\"> <img src={photo4} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"5\" onClick ={findId5} className=\" drum\"> <img src={photo5} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"6\" onClick ={findId6} className=\" drum\"> <img src={photo6} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"7\" onClick ={findId7} className=\" drum\"> <img src={photo7} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"8\" onClick ={findId8} className=\" drum\"> <img src={photo8} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"9\" onClick ={findId9} className=\" drum\"> <img src={photo9} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"10\" onClick ={findId10} className=\" drum\">\r\n      <img src={photo10} className=\"image\" alt=\"/\"></img>\r\n    </button>\r\n <div>\r\n   <h1 className=\"scrollDown\" ref={commentSection}>Click On the Compartment To Catch The Thief</h1>\r\n </div>\r\n  \r\n\r\n  </div>;\r\n\r\n}\r\n\r\nexport default LinearSearch;","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\ComponentCard.js",["110"],"import React from 'react'\r\nimport \"./cardComponent.css\"\r\n\r\nimport Tilt from \"react-tilt\"\r\n\r\nfunction componentCard(props) {\r\n    return (\r\n      <div className=\"ComponentCard\">\r\n        <Tilt\r\n      className=\"col-md-9 card__content Tilt\"\r\n      options={{ max: 5, scale: 1 }}\r\n    >\r\n      <div\r\n        className=\"card__content__inner Tilt-inner\"\r\n        style={{ backgroundColor: props.color, scale: 1 }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6 col-md-9 col-xs-12\r\n           align-items-start\">\r\n            <div className=\"hackathon__title\">{props.headline}</div>\r\n            <div className=\"hackathon__duration\"> {props.para}</div>\r\n\r\n            <a\r\n              href=\"https://hackathon.dscwow.tech/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n            >\r\n              <button class=\"buttonfx slideleft\">{props.buttonContent}</button>\r\n            </a>\r\n          </div>\r\n          <img\r\n\r\n          // src=\"https://dscwow.tech/images/card/graphics.png\"\r\n            // src=\"https://banner2.cleanpng.com/20180426/xue/kisspng-algorithms-data-structures-=-programs-data-struc-5ae173e12e69b4.6797280015247247051901.jpg\"\r\n            src={props.sideimage}\r\n\r\n            className=\"card__graphics lazy\"\r\n            alt=\"CodeOffDuty Hackathon DSC WOW\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </Tilt>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default componentCard;\r\n","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\CompleStory.js",["111"],"import React from 'react'\r\nimport \"./CompleStory.css\";\r\nimport Lottie from 'react-lottie';\r\nimport cop from \"../Lottie/policecar.json\";\r\nimport police from \"../Lottie/policeman.json\";\r\nimport bagmoney from \"../Lottie/bagmoney.json\";\r\nimport badge from \"../Lottie/badge.json\";\r\n// import linearCode from \"../Assets/\"\r\nimport thief from \"../Assets/chasingthief.png\";\r\nimport LinearSearch from './LinearSearch';\r\n\r\n\r\nfunction CompleStory() {\r\n  return (\r\n    <div className=\"linear__Search\">\r\n    <div className=\"linear__header\">\r\n       <h1>\r\n         <span className=\"black\"> Scratch the</span>\r\n         <span className=\"saffron\">Lie <span className=\"black1\">find the</span></span>\r\n         <div className=\"cop\">\r\n           <Lottie options={{ animationData:badge,}} />\r\n         </div>\r\n         <span className=\"orange\">Thief</span>\r\n       </h1>\r\n    </div>\r\n    <div className=\"linear__story\">\r\n         <div className=\"lineary_storyone\">\r\n         <div className=\"linear__start\">\r\n            <span className=\"welcome\"> Hello chief,</span>\r\n            <p> welcome to this enthralling <span className=\"journey\">Journey</span> filled with action, <span className=\"adven\">Adventure</span> and excitement.\r\n               You have been appointed as the new police station chief of an <span className=\"town\">Infamous Town </span> since it is filled with thieves committing \r\n               crimes now and then. All you have to do is show no mercy to these ville thieves who are <span className=\"terror\">Terrorizing</span> the town.</p>\r\n         </div>\r\n         <div className=\"linear__police\">\r\n           <Lottie options={{ animationData:police,}} />\r\n         </div>\r\n         </div>\r\n         \r\n            \r\n         <div className=\"linear_storytwo\">\r\n           <div className=\"linear__runthief\">\r\n           <img className=\"thiefRun\" src={thief} alt=\"\" />\r\n         \r\n         </div>\r\n           <div className=\"linear__mid\">\r\n              <p>You are welcomed the very \r\n                <span className=\"day\"> first day</span>\r\n                 at office with some serious task on shoulders.\r\n                  A <span className=\"robbery\"> Robbery</span> has been reported nearby and you rush \r\n                  to the site immediately.\r\n                  On reaching the crime scene you are informed that\r\n                   the thief has already\r\n                 eloped and taken away with him significant amount of <span className=\"cash\"> cash.</span>\r\n                  After carefully scrutinising the scene and collecting the cues,\r\n                   you go on to trace the thief and catch him down.\r\n                    On contacting the station for <span className=\"support\"> backup support,</span> \r\n                    you are led down as only you are available at the instant.\r\n</p>\r\n           </div>\r\n         </div>\r\n         <div className=\"linear_storythree\">\r\n           <div  className=\"linear__run\">\r\n             <p> <span className=\"track\"> Tracking</span> him, you reach the train station \r\n             and see him getting onto the train and <span className=\"rush\"> rush</span> to reach the \r\n             train in time. The real <span className=\"challenge\"> Challenge</span> to get hold of him begins here...</p>\r\n           </div>\r\n           <div className=\"linear__car\">\r\n           <Lottie options={{ animationData:cop,}} />\r\n          {/* // <Lottie options={{ animationData: \"https://assets4.lottiefiles.com/packages/lf20_fzxgbei2.json\",}} /> */}\r\n         </div>\r\n         </div>\r\n         \r\n    </div>\r\n    <div className=\"linear__search\">\r\n      <h1 className=\"headCatch\" >Let's Catch The Thief</h1>\r\n      <div className=\"problemStatement\">\r\n        <h1>Problem:</h1>\r\n        <p>the train has 10 compartments, and there is a condition that in each compartment, there is only one passenger. The thief hid in Tran's compartment. You i.e. chief knew the weight of every passenger and thief. \r\nFind out the compartmentâ€™s number in which the thief is found.</p>\r\n      </div>\r\n      <LinearSearch />\r\n    </div>\r\n    <div className=\"linear__blog\">\r\n      <h2>Linear Search</h2>\r\n      <p>A Linear Search is the most basic type of searching algorithm. \r\n      A Linear Search sequentially moves through your collection (or data\r\n       structure) looking for a matching value. In other words, it looks down a list, \r\n       one item at a time, without jumping.</p>\r\n       <video className=\"home__logo\" autoPlay={true} loop={true} muted={true} playsInline={true}>\r\n          <source src=\"https://github.com/rohitsigar/ILLITRATE/blob/master/linearvids.mp4?raw=true\" type=\"video/webm\" />\r\n        </video>\r\n       <h4> Approach </h4>\r\n       <ul>\r\n         <li>\r\n           <p className=\"linear_step\">Sequentially move through the array from the leftmost side and start comparing the value\r\n            you want to search (let x) with each element of array.</p>\r\n         </li>\r\n         <li>\r\n           <p className=\"linear_step\">\r\n           If x matches with an element then return the index.\r\n           </p>\r\n         </li>\r\n         <li>\r\n           <p className=\"linear_step\">\r\n           If x does not match with any of the elements then return -1.\r\n           </p>\r\n         </li>\r\n       </ul>\r\n       <img className=\"linear__code\" src=\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/linearCode%20Snippet.PNG?raw=true\"alt=\"/\"></img>\r\n       <p classname=\"linear_ques\">\r\n       If there is a n sized array & you have to find element-x from the array, \r\n       then what is the average number of indexes you have to traverse? \r\n       <span className=\"linear_think\">Think about it?</span>\r\n       </p>\r\n       <h4> Time Complexity </h4>\r\n       <p classname=\"linear_timeCom\">\r\n       The time required to search an element using a linear search algorithm depends on the size of the list. Within the best-case situation, the component is present at the starting of\r\n        the list and within the worst-case, it is display at the end. <br></br><br></br>We can conclude that \"Time Complexity\" for linear Search is\r\n        <br></br><h3>Best: O(1) </h3><h3> Average: O(n) </h3><h3> Worst: O(n)</h3>\r\n       </p>\r\n       <h6 className=\"linear__con\">Overall Linear Search is an important concept to understand when it comes to algorithms.</h6>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n \r\n\r\nexport default CompleStory;\r\n","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\Button.js",[],"C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\EventCard.js",[],"C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\Card.js",[],"C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\BinarySearch.js",["112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145"],"import React, { useRef, useState } from \"react\";\r\nimport \"./BinarySearch.css\";\r\nimport Card from \"./Card\";\r\nvar Weight = new Array(1,2,3,4,5,6,7,8,9,10,11);\r\nvar Message3 = \"No. of Beads\";\r\nvar Message1 = \"Ready to Scratch a Lie! ðŸ˜œ\";\r\nvar Message2 = \"Traverse the array\";\r\nvar Message4 = \"\";\r\nvar Thief ;\r\nvar left = 1;\r\nvar right = 10;\r\nvar b = true;\r\nvar PoliceMan = 1;\r\nfunction trial(){\r\n  for(var i=1; i<Weight.length;i++)\r\n  {\r\n    Weight[i] = Math.floor(Math.random()*100)\r\n    while(Weight==0){\r\n      Weight[i] = Math.floor(Math.random()*100)\r\n    }\r\n  }\r\n  Weight.sort(function(a, b){return a - b});\r\n  for(var i=1;i<11;i++)\r\n  {\r\n    console.log(Weight[i]);\r\n  }\r\n   Thief = Math.floor(Math.random()*10)\r\n   while(Thief==0){\r\n    Thief= Math.floor(Math.random()*10)\r\n  }\r\n  var ThiefWeight = Weight[Thief];\r\n}\r\nfunction BinarySearch() {\r\nconst [values,setValues] = useState(0);\r\n\r\nconst [photo1,setPhoto1] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo2,setPhoto2] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo3,setPhoto3] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo4,setPhoto4] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo5,setPhoto5] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo6,setPhoto6] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo7,setPhoto7] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo8,setPhoto8] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo9,setPhoto9] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo10,setPhoto10] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\nconst [photo11,setPhoto11] = useState(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\");\r\n\r\nPoliceMan = Math.floor(left + (right - left)/2);\r\n\r\nif(b)\r\n{\r\n  trial();\r\n  b = false;\r\n  Message4 = \"No. of beads in Precious jwellery: \" + Weight[Thief]; \r\n}\r\nconsole.log(Thief);\r\nThief = 7;\r\nconsole.log(PoliceMan);\r\nconst findId1 =  ()=>{\r\n  if(PoliceMan==1)\r\n  {\r\n    if(Weight[Thief]==Weight[1])\r\n    {\r\n      Thief1();\r\n      findTrain21();\r\n      Message1 = \"Congratulations! You save the robary ðŸ¤©!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"st index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n\r\n     }\r\n    else\r\n    {\r\n      findTrain10();\r\n      findTrain21();\r\n       Message1 = \"Oops!!ðŸ™Š this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 = \"No. of Beads in currentBox: \" + Weight[1] ;\r\n      if(Weight[Thief]>Weight[1])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n    }\r\n  }\r\n  else\r\n  {\r\n    imp();\r\n    Message1 = \"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"3 box\");\r\n  }\r\n} \r\nconst findId2 =  ()=>{\r\n  if(PoliceMan==2)\r\n  {\r\n    if(Weight[Thief]==Weight[2])\r\n    {\r\n      Thief2();\r\n      findTrain51();\r\n      Message1 = \"Congratulations! You save the robary ðŸ¤©!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"nd index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n    }\r\n    else\r\n    {\r\n      findTrain51();\r\n      findTrain20();\r\n       Message1 = \"Oops!!ðŸ™Š this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 = \"No. of Beads in currentBox: \" + Weight[2] ;\r\n      if(Weight[Thief]>Weight[2])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n    }\r\n  }\r\n  else{\r\n        imp();\r\n    Message1 =\"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"3 box\");\r\n  }\r\n} \r\nconst findId3 =  ()=>{\r\nif(PoliceMan==3)\r\n  {\r\n    if(Weight[Thief]==Weight[3])\r\n    {\r\n      Thief3();\r\n      findTrain21();\r\n      Message1 = \"Congratulations! You save the robary ðŸ¤©!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"rd index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n    }\r\n    else\r\n    {\r\n      findTrain21();\r\n      findTrain30();\r\n       Message1 = \"Oops!!ðŸ™Š this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 =  \"No. of Beads in currentBox: \" + Weight[3] ;\r\n      if(Weight[Thief]>Weight[3])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 =\"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"3 box\");\r\n  }\r\n} \r\nconst findId4 =  ()=>{\r\nif(PoliceMan==4)\r\n  {\r\n    if(Weight[Thief]==Weight[4])\r\n    {\r\n      Thief4();\r\n      findTrain31();\r\n      Message1 = \"Congratulations! You save the robary ðŸ¤©!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"th index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n    }\r\n    else\r\n    {\r\n      findTrain31();\r\n      findTrain40();\r\n       Message1 = \"Oops!!ðŸ™Š this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 =  \"No. of Beads in currentBox: \" + Weight[4] ;\r\n      if(Weight[Thief]>Weight[4])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 =\"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"4 box\");\r\n  }\r\n} \r\nconst findId5 =  ()=>{\r\nif(PoliceMan==5)\r\n  {\r\n    if(Weight[Thief]==Weight[5])\r\n    {\r\n      Thief5();\r\n      Message1 = \"Congratulations! You save the robary ðŸ¤©!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"th index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n    }\r\n    else\r\n    {\r\n      findTrain50();\r\n       Message1 = \"Oops!!ðŸ™Š this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 =  \"No. of Beads in currentBox: \" + Weight[5] ;\r\n      if(Weight[Thief]>Weight[5])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 =\"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"5 box\");\r\n  }\r\n} \r\nconst findId6 =  ()=>{\r\nif(PoliceMan==6)\r\n  {\r\n    if(Weight[Thief]==Weight[6])\r\n    {\r\n      Thief6();\r\n      findTrain81();\r\n      Message1 = \"Congratulations! You save the robary ðŸ¤©!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"th index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n    }\r\n    else\r\n    {\r\n      findTrain81();\r\n      findTrain60();\r\n       Message1 = \"Oops!!ðŸ™Š this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 =  \"No. of Beads in currentBox: \" + Weight[6] ;\r\n      if(Weight[Thief]>Weight[6])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 =\"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"6 box\");\r\n  }\r\n} \r\nconst findId7 =  ()=>{\r\nif(PoliceMan==7)\r\n  {\r\n    if(Weight[Thief]==Weight[7])\r\n    {\r\n      Thief7();\r\n      findTrain61();\r\n      Message1 = \"Congratulations! You save the robary ðŸ¤©!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"th index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n    }\r\n    else\r\n    {\r\n      findTrain61();\r\n      findTrain70();\r\n       Message1 = \"Oops!!ðŸ™Š this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 =  \"No. of Beads in currentBox: \" + Weight[7] ;\r\n      if(Weight[Thief]>Weight[7])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 =\"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"7 box\");\r\n  }\r\n} \r\n\r\nconst findId8 =  ()=>{\r\nif(PoliceMan==8)\r\n  {\r\n    if(Weight[Thief]==Weight[8])\r\n    {\r\n      Thief8();\r\n      findTrain51();\r\n      Message1 = \"Congratulations! You save the robary ðŸ¤©!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"th index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n    }\r\n    else\r\n    {\r\n      findTrain51();\r\n      findTrain80();\r\n       Message1 = \"Oops!!ðŸ™Š this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 = \"No. of Beads in currentBox: \" + Weight[8] ;\r\n      if(Weight[Thief]>Weight[8])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 =\"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"8 box\");\r\n  }\r\n}\r\nconst findId9 =  ()=>{\r\n  if(PoliceMan==9)\r\n  {\r\n    if(Weight[Thief]==Weight[9])\r\n    {\r\n      findTrain81();\r\n      Thief9();\r\n      Message1 = \"Congratulations! You save the robary ðŸ¤©!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"th index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n    }\r\n    else\r\n    {\r\n      findTrain81();\r\n      findTrain90();\r\n       Message1 = \"Oops!!ðŸ™Š this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 =  \"No. of Beads in currentBox: \" + Weight[9] ;\r\n      if(Weight[Thief]>Weight[9])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 =\"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"9 box\");\r\n  }\r\n} \r\nconst findId10 =  ()=>{\r\nif(PoliceMan==10)\r\n  {\r\n    if(Weight[Thief]==Weight[10])\r\n    {\r\n      findTrain91();\r\n      Thief10();\r\n      Message1 = \"Congratulations! You save the robary ðŸ¤©!\";\r\n      Message2 = \"You found the precious jwellery on \" + PoliceMan + \"th index of the Box\";\r\n      Message3 = \"Thief arrested!!\"\r\n    }\r\n    else\r\n    {\r\n      findTrain91();\r\n      findTrain100();\r\n       Message1 = \"Oops!!ðŸ™Š this is not the box you are lookin' for.\";\r\n      Message2 = \"Box[\" + PoliceMan + \"] != Box of precious beads\";\r\n      Message3 = \"No. of Beads in currentBox: \" + Weight[10] ;\r\n      if(Weight[Thief]>Weight[10])\r\n      {\r\n        left = PoliceMan+1;\r\n      }\r\n      else\r\n      {\r\n         right = PoliceMan - 1;\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    imp();\r\n    Message1 =\"This is not the optimal way to reach the Target\";\r\n    Message2 = \" Binary Search : Works on Sorted Array : Works on Principle of Divide and Conquer\";\r\n    console.log(\"10 box\");\r\n  }\r\n} \r\nconst findTrain10 = ()=>\r\n{\r\n  setPhoto1(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead1.png?raw=true\");\r\n}\r\nconst findTrain11 = ()=>\r\n{\r\n  setPhoto1(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst findTrain20 = ()=>\r\n{\r\n  setPhoto2(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead2.png?raw=true\");\r\n}\r\nconst findTrain21 = ()=>\r\n{\r\n  setPhoto2(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst findTrain30 = ()=>\r\n{\r\n  setPhoto3(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead3.png?raw=true\");\r\n}\r\nconst findTrain31 = ()=>\r\n{\r\n  setPhoto3(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst findTrain40 = ()=>\r\n{\r\n  setPhoto4(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead4.png?raw=true\");\r\n}\r\nconst findTrain41 = ()=>\r\n{\r\n  setPhoto4(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst findTrain50 = ()=>\r\n{\r\n  setPhoto5(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead1.png?raw=true\");\r\n}\r\nconst findTrain51 = ()=>\r\n{\r\n  setPhoto5(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst findTrain60 = ()=>\r\n{\r\n  setPhoto6(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead2.png?raw=true\");\r\n}\r\nconst findTrain61 = ()=>\r\n{\r\n  setPhoto6(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst findTrain70 = ()=>\r\n{\r\n  setPhoto7(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead3.png?raw=true\");\r\n}\r\nconst findTrain71 = ()=>\r\n{\r\n  setPhoto7(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst findTrain80 = ()=>\r\n{\r\n  setPhoto8(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead1.png?raw=true\");\r\n}\r\nconst findTrain81 = ()=>\r\n{\r\n  setPhoto8(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst findTrain90 = ()=>\r\n{\r\n  setPhoto9(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead4.png?raw=true\");\r\n}\r\nconst findTrain91 = ()=>\r\n{\r\n  setPhoto9(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst findTrain100 = ()=>\r\n{\r\n  setPhoto10(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Bead4.png?raw=true\");\r\n}\r\nconst findTrain101 = ()=>\r\n{\r\n  setPhoto10(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/Box.png?raw=true\");\r\n}\r\nconst Thief1 = ()=>\r\n{\r\n  setPhoto1(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst Thief2 = ()=>\r\n{\r\n  setPhoto2(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst Thief3 = ()=>\r\n{\r\n  setPhoto3(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst Thief4 = ()=>\r\n{\r\n  setPhoto4(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst Thief5 = ()=>\r\n{\r\n  setPhoto5(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst Thief6 = ()=>\r\n{\r\n  setPhoto6(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst Thief7 = ()=>\r\n{\r\n  setPhoto7(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst Thief8 = ()=>\r\n{\r\n  setPhoto8(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst Thief9 = ()=>\r\n{\r\n  setPhoto9(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst Thief10 = ()=>\r\n{\r\n  setPhoto10(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/MainJwel.png?raw=true\");\r\n}\r\nconst imp = ()=>\r\n{\r\n  if(photo11==\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\")\r\n  {\r\n    setPhoto11(\"https://bit.ly/2XNRqc1\")\r\n  }\r\n  else\r\n  {\r\n    setPhoto11(\"https://github.com/rohitsigar/ILLITRATE/blob/master/src/Assets/BoxDark1.png?raw=true\")\r\n  }\r\n}\r\n  return <div className=\"linearSearch\">\r\n  <div className=\"CardCSS\">\r\n  <Card \r\n    message={Message1}\r\n  />\r\n  <Card \r\n    message={Message2}\r\n  />\r\n    <Card \r\n    message={Message3}\r\n  />\r\n  <Card \r\n    message={Message4}\r\n  />\r\n\r\n  </div>\r\n    <button id=\"1\" onClick ={findId1}  className=\" drum\" >\r\n    <img id=\"img\"  src = {photo1}  className=\"image\"  alt=\"/\">\r\n    </img>\r\n    </button>\r\n   \r\n    <button  id=\"2\"  onClick ={findId2}  className=\" drum\"> <img  src={photo2}  className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"3\" onClick ={findId3}  className=\" drum\"> <img src={photo3} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"4\" onClick ={findId4}  className=\" drum\"> <img src={photo4} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"5\" onClick ={findId5} className=\" drum\"> <img src={photo5} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"6\" onClick ={findId6} className=\" drum\"> <img src={photo6} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"7\" onClick ={findId7} className=\" drum\"> <img src={photo7} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"8\" onClick ={findId8} className=\" drum\"> <img src={photo8} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"9\" onClick ={findId9} className=\" drum\"> <img src={photo9} className=\"image\" alt=\"/\"></img></button>\r\n    <button id=\"10\" onClick ={findId10} className=\" drum\">\r\n      <img src={photo10} className=\"image\" alt=\"/\"></img>\r\n    </button>\r\n  \r\n\r\n  </div>;\r\n\r\n}\r\n\r\nexport default BinarySearch;","C:\\Users\\hp\\Desktop\\Hackathon\\ILLITRATE\\src\\Components\\BeadStory.js",["146","147"],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":20},{"ruleId":"152","severity":1,"message":"156","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":14},{"ruleId":"152","severity":1,"message":"157","line":4,"column":8,"nodeType":"154","messageId":"155","endLine":4,"endColumn":15},{"ruleId":"152","severity":1,"message":"158","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":18},{"ruleId":"152","severity":1,"message":"159","line":6,"column":8,"nodeType":"154","messageId":"155","endLine":6,"endColumn":18},{"ruleId":"152","severity":1,"message":"160","line":7,"column":10,"nodeType":"154","messageId":"155","endLine":7,"endColumn":16},{"ruleId":"161","severity":1,"message":"162","line":4,"column":14,"nodeType":"163","messageId":"164","endLine":4,"endColumn":48},{"ruleId":"165","severity":1,"message":"166","line":15,"column":17,"nodeType":"167","messageId":"168","endLine":15,"endColumn":19},{"ruleId":"169","severity":1,"message":"170","line":20,"column":11,"nodeType":"154","messageId":"171","endLine":20,"endColumn":12},{"ruleId":"165","severity":1,"message":"166","line":25,"column":15,"nodeType":"167","messageId":"168","endLine":25,"endColumn":17},{"ruleId":"152","severity":1,"message":"172","line":28,"column":7,"nodeType":"154","messageId":"155","endLine":28,"endColumn":18},{"ruleId":"152","severity":1,"message":"173","line":33,"column":9,"nodeType":"154","messageId":"155","endLine":33,"endColumn":15},{"ruleId":"152","severity":1,"message":"174","line":38,"column":8,"nodeType":"154","messageId":"155","endLine":38,"endColumn":14},{"ruleId":"152","severity":1,"message":"175","line":38,"column":15,"nodeType":"154","messageId":"155","endLine":38,"endColumn":24},{"ruleId":"165","severity":1,"message":"166","line":64,"column":15,"nodeType":"167","messageId":"168","endLine":64,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":66,"column":21,"nodeType":"167","messageId":"168","endLine":66,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":84,"column":15,"nodeType":"167","messageId":"168","endLine":84,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":86,"column":21,"nodeType":"167","messageId":"168","endLine":86,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":111,"column":13,"nodeType":"167","messageId":"168","endLine":111,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":113,"column":21,"nodeType":"167","messageId":"168","endLine":113,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":138,"column":13,"nodeType":"167","messageId":"168","endLine":138,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":140,"column":21,"nodeType":"167","messageId":"168","endLine":140,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":165,"column":13,"nodeType":"167","messageId":"168","endLine":165,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":167,"column":21,"nodeType":"167","messageId":"168","endLine":167,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":192,"column":13,"nodeType":"167","messageId":"168","endLine":192,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":194,"column":21,"nodeType":"167","messageId":"168","endLine":194,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":219,"column":13,"nodeType":"167","messageId":"168","endLine":219,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":221,"column":21,"nodeType":"167","messageId":"168","endLine":221,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":249,"column":17,"nodeType":"167","messageId":"168","endLine":249,"endColumn":19},{"ruleId":"165","severity":1,"message":"166","line":252,"column":21,"nodeType":"167","messageId":"168","endLine":252,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":278,"column":15,"nodeType":"167","messageId":"168","endLine":278,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":280,"column":21,"nodeType":"167","messageId":"168","endLine":280,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":305,"column":13,"nodeType":"167","messageId":"168","endLine":305,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":307,"column":21,"nodeType":"167","messageId":"168","endLine":307,"endColumn":23},{"ruleId":"152","severity":1,"message":"176","line":407,"column":7,"nodeType":"154","messageId":"155","endLine":407,"endColumn":19},{"ruleId":"165","severity":1,"message":"166","line":453,"column":13,"nodeType":"167","messageId":"168","endLine":453,"endColumn":15},{"ruleId":"177","severity":1,"message":"178","line":23,"column":13,"nodeType":"179","endLine":27,"endColumn":14},{"ruleId":"152","severity":1,"message":"180","line":6,"column":8,"nodeType":"154","messageId":"155","endLine":6,"endColumn":16},{"ruleId":"152","severity":1,"message":"181","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":23},{"ruleId":"161","severity":1,"message":"162","line":4,"column":14,"nodeType":"163","messageId":"164","endLine":4,"endColumn":48},{"ruleId":"165","severity":1,"message":"166","line":18,"column":17,"nodeType":"167","messageId":"168","endLine":18,"endColumn":19},{"ruleId":"169","severity":1,"message":"170","line":23,"column":11,"nodeType":"154","messageId":"171","endLine":23,"endColumn":12},{"ruleId":"165","severity":1,"message":"166","line":28,"column":15,"nodeType":"167","messageId":"168","endLine":28,"endColumn":17},{"ruleId":"152","severity":1,"message":"172","line":31,"column":7,"nodeType":"154","messageId":"155","endLine":31,"endColumn":18},{"ruleId":"152","severity":1,"message":"174","line":34,"column":8,"nodeType":"154","messageId":"155","endLine":34,"endColumn":14},{"ruleId":"152","severity":1,"message":"175","line":34,"column":15,"nodeType":"154","messageId":"155","endLine":34,"endColumn":24},{"ruleId":"169","severity":1,"message":"170","line":54,"column":9,"nodeType":"154","messageId":"171","endLine":54,"endColumn":10},{"ruleId":"165","severity":1,"message":"166","line":69,"column":15,"nodeType":"167","messageId":"168","endLine":69,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":71,"column":21,"nodeType":"167","messageId":"168","endLine":71,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":106,"column":15,"nodeType":"167","messageId":"168","endLine":106,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":108,"column":21,"nodeType":"167","messageId":"168","endLine":108,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":141,"column":13,"nodeType":"167","messageId":"168","endLine":141,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":143,"column":21,"nodeType":"167","messageId":"168","endLine":143,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":176,"column":13,"nodeType":"167","messageId":"168","endLine":176,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":178,"column":21,"nodeType":"167","messageId":"168","endLine":178,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":211,"column":13,"nodeType":"167","messageId":"168","endLine":211,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":213,"column":21,"nodeType":"167","messageId":"168","endLine":213,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":245,"column":13,"nodeType":"167","messageId":"168","endLine":245,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":247,"column":21,"nodeType":"167","messageId":"168","endLine":247,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":280,"column":13,"nodeType":"167","messageId":"168","endLine":280,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":282,"column":21,"nodeType":"167","messageId":"168","endLine":282,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":316,"column":13,"nodeType":"167","messageId":"168","endLine":316,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":318,"column":21,"nodeType":"167","messageId":"168","endLine":318,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":351,"column":15,"nodeType":"167","messageId":"168","endLine":351,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":353,"column":21,"nodeType":"167","messageId":"168","endLine":353,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":386,"column":13,"nodeType":"167","messageId":"168","endLine":386,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":388,"column":21,"nodeType":"167","messageId":"168","endLine":388,"endColumn":23},{"ruleId":"152","severity":1,"message":"182","line":424,"column":7,"nodeType":"154","messageId":"155","endLine":424,"endColumn":18},{"ruleId":"152","severity":1,"message":"183","line":448,"column":7,"nodeType":"154","messageId":"155","endLine":448,"endColumn":18},{"ruleId":"152","severity":1,"message":"184","line":472,"column":7,"nodeType":"154","messageId":"155","endLine":472,"endColumn":18},{"ruleId":"152","severity":1,"message":"176","line":496,"column":7,"nodeType":"154","messageId":"155","endLine":496,"endColumn":19},{"ruleId":"165","severity":1,"message":"166","line":542,"column":13,"nodeType":"167","messageId":"168","endLine":542,"endColumn":15},{"ruleId":"185","severity":1,"message":"186","line":40,"column":11,"nodeType":"179","endLine":40,"endColumn":140},{"ruleId":"185","severity":1,"message":"186","line":64,"column":14,"nodeType":"179","endLine":64,"endColumn":146},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'IconButton' is defined but never used.","'purple' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'i' is already defined.","redeclared","'ThiefWeight' is assigned a value but never used.","'findId' is assigned a value but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'findTrain101' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'bagmoney' is defined but never used.","'useRef' is defined but never used.","'findTrain11' is assigned a value but never used.","'findTrain41' is assigned a value but never used.","'findTrain71' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]